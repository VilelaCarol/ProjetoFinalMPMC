

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sat Jun 24 11:20:27 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Version 2.20
    18                           ; Generated 12/02/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171     0008                     _PORTDbits	set	8
   172     0088                     _TRISD	set	136
   173                           
   174                           	psect	strings
   175     0003                     __pstrings:
   176     0003                     stringtab:
   177     0003                     __stringtab:
   178     0003                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181     0003                     stringdir:
   182     0003  3000               	movlw	high stringdir
   183     0004  008A               	movwf	10
   184     0005  0804               	movf	4,w
   185     0006  0A84               	incf	4,f
   186     0007  0782               	addwf	2,f
   187     0008                     __stringbase:
   188     0008  3400               	retlw	0
   189     0009                     __end_of__stringtab:
   190     0009                     STR_1:
   191     0009  3463               	retlw	99	;'c'
   192     000A  3461               	retlw	97	;'a'
   193     000B  3472               	retlw	114	;'r'
   194     000C  346F               	retlw	111	;'o'
   195     000D  346C               	retlw	108	;'l'
   196     000E  3400               	retlw	0
   197                           
   198                           	psect	cinit
   199     07FC                     start_initialization:	
   200                           ; #config settings
   201                           
   202     07FC                     __initialization:
   203     07FC                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206     07FC                     __end_of__initialization:
   207     07FC  0183               	clrf	3
   208     07FD  120A  118A  2EFE   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	cstackCOMMON
   211     0070                     __pcstackCOMMON:
   212     0070                     ?_Lcd_Port:
   213     0070                     ??_Lcd_Port:	
   214                           ; 1 bytes @ 0x0
   215                           
   216     0070                     ?_Lcd_Cmd:	
   217                           ; 1 bytes @ 0x0
   218                           
   219     0070                     ?_Lcd_Clear:	
   220                           ; 1 bytes @ 0x0
   221                           
   222     0070                     ?_Lcd_Init:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ?_Lcd_Write_Char:	
   226                           ; 1 bytes @ 0x0
   227                           
   228     0070                     ?_Lcd_Write_String:	
   229                           ; 1 bytes @ 0x0
   230                           
   231     0070                     ?_main:	
   232                           ; 1 bytes @ 0x0
   233                           
   234     0070                     Lcd_Port@a:	
   235                           ; 1 bytes @ 0x0
   236                           
   237                           
   238                           ; 1 bytes @ 0x0
   239     0070                     	ds	1
   240     0071                     ??_Lcd_Cmd:
   241     0071                     ??_Lcd_Write_Char:	
   242                           ; 1 bytes @ 0x1
   243                           
   244                           
   245                           ; 1 bytes @ 0x1
   246     0071                     	ds	1
   247     0072                     Lcd_Write_Char@temp:
   248                           
   249                           ; 1 bytes @ 0x2
   250     0072                     	ds	1
   251     0073                     Lcd_Cmd@a:
   252     0073                     Lcd_Write_Char@y:	
   253                           ; 1 bytes @ 0x3
   254                           
   255                           
   256                           ; 1 bytes @ 0x3
   257     0073                     	ds	1
   258     0074                     ??_Lcd_Clear:
   259     0074                     ?_Lcd_Set_Cursor:	
   260                           ; 1 bytes @ 0x4
   261                           
   262     0074                     ??_Lcd_Init:	
   263                           ; 1 bytes @ 0x4
   264                           
   265     0074                     Lcd_Set_Cursor@b:	
   266                           ; 1 bytes @ 0x4
   267                           
   268     0074                     Lcd_Write_Char@a:	
   269                           ; 1 bytes @ 0x4
   270                           
   271                           
   272                           ; 1 bytes @ 0x4
   273     0074                     	ds	1
   274     0075                     ??_Lcd_Set_Cursor:
   275     0075                     ??_Lcd_Write_String:	
   276                           ; 1 bytes @ 0x5
   277                           
   278     0075                     Lcd_Write_String@i:	
   279                           ; 1 bytes @ 0x5
   280                           
   281                           
   282                           ; 2 bytes @ 0x5
   283     0075                     	ds	1
   284     0076                     Lcd_Set_Cursor@a:
   285                           
   286                           ; 1 bytes @ 0x6
   287     0076                     	ds	1
   288     0077                     Lcd_Set_Cursor@z:
   289     0077                     Lcd_Write_String@a:	
   290                           ; 1 bytes @ 0x7
   291                           
   292                           
   293                           ; 1 bytes @ 0x7
   294     0077                     	ds	1
   295     0078                     Lcd_Set_Cursor@y:
   296                           
   297                           ; 1 bytes @ 0x8
   298     0078                     	ds	1
   299     0079                     Lcd_Set_Cursor@temp:
   300                           
   301                           ; 1 bytes @ 0x9
   302     0079                     	ds	1
   303     007A                     ??_main:
   304                           
   305                           ; 1 bytes @ 0xA
   306     007A                     	ds	2
   307                           
   308                           	psect	maintext
   309     06FE                     __pmaintext:	
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 22 in file "newmain.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;  buffer         20    0        unsigned char [20]
   320 ;;  f               4    0        float 
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : B00/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   330 ;;      Params:         0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0
   332 ;;      Temps:          2       0       0       0       0
   333 ;;      Totals:         2       0       0       0       0
   334 ;;Total ram usage:        2 bytes
   335 ;; Hardware stack levels required when called: 3
   336 ;; This function calls:
   337 ;;		_Lcd_Clear
   338 ;;		_Lcd_Init
   339 ;;		_Lcd_Set_Cursor
   340 ;;		_Lcd_Write_String
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346     06FE                     _main:	
   347                           ;psect for function _main
   348                           
   349     06FE                     l771:	
   350                           ;incstack = 0
   351                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   352                           
   353                           
   354                           ;newmain.c: 23:     TRISD = 0;
   355     06FE  1683               	bsf	3,5	;RP0=1, select bank1
   356     06FF  1303               	bcf	3,6	;RP1=0, select bank1
   357     0700  0188               	clrf	8	;volatile
   358     0701                     l773:
   359                           
   360                           ;newmain.c: 24:     float f;;newmain.c: 25:     Lcd_Init();
   361     0701  120A  118A  279F  120A  118A  	fcall	_Lcd_Init
   362     0706                     l775:
   363                           
   364                           ;newmain.c: 29:     {;newmain.c: 31:     Lcd_Clear();
   365     0706  120A  118A  2690  120A  118A  	fcall	_Lcd_Clear
   366     070B                     l777:
   367                           
   368                           ;newmain.c: 32:     Lcd_Set_Cursor(1,1);
   369     070B  01F4               	clrf	Lcd_Set_Cursor@b
   370     070C  0AF4               	incf	Lcd_Set_Cursor@b,f
   371     070D  3001               	movlw	1
   372     070E  120A  118A  2759  120A  118A  	fcall	_Lcd_Set_Cursor
   373     0713                     l779:
   374                           
   375                           ;newmain.c: 34:     Lcd_Write_String("carol");
   376     0713  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   377     0714  120A  118A  26D9  120A  118A  	fcall	_Lcd_Write_String
   378     0719                     l781:
   379                           
   380                           ;newmain.c: 35:     _delay((unsigned long)((100)*(4000000/4000.0)));
   381     0719  3082               	movlw	130
   382     071A  00FB               	movwf	??_main+1
   383     071B  30DD               	movlw	221
   384     071C  00FA               	movwf	??_main
   385     071D                     u167:
   386     071D  0BFA               	decfsz	??_main,f
   387     071E  2F1D               	goto	u167
   388     071F  0BFB               	decfsz	??_main+1,f
   389     0720  2F1D               	goto	u167
   390     0721  2F22               	nop2
   391     0722  2F06               	goto	l775
   392     0723  120A  118A  2800   	ljmp	start
   393     0726                     __end_of_main:
   394                           
   395                           	psect	text1
   396     06D9                     __ptext1:	
   397 ;; *************** function _Lcd_Write_String *****************
   398 ;; Defined at:
   399 ;;		line 97 in file "./lcd.h"
   400 ;; Parameters:    Size  Location     Type
   401 ;;  a               1    wreg     PTR unsigned char 
   402 ;;		 -> STR_1(6), 
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  a               1    7[COMMON] PTR unsigned char 
   405 ;;		 -> STR_1(6), 
   406 ;;  i               2    5[COMMON] int 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      void 
   409 ;; Registers used:
   410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   416 ;;      Params:         0       0       0       0       0
   417 ;;      Locals:         3       0       0       0       0
   418 ;;      Temps:          0       0       0       0       0
   419 ;;      Totals:         3       0       0       0       0
   420 ;;Total ram usage:        3 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 2
   423 ;; This function calls:
   424 ;;		_Lcd_Write_Char
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430     06D9                     _Lcd_Write_String:	
   431                           ;psect for function _Lcd_Write_String
   432                           
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436                           ;Lcd_Write_String@a stored from wreg
   437     06D9  00F7               	movwf	Lcd_Write_String@a
   438     06DA                     l763:
   439                           
   440                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
   441     06DA  01F5               	clrf	Lcd_Write_String@i
   442     06DB  01F6               	clrf	Lcd_Write_String@i+1
   443     06DC  2EF0               	goto	l769
   444     06DD                     l765:
   445                           
   446                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
   447     06DD  0875               	movf	Lcd_Write_String@i,w
   448     06DE  0777               	addwf	Lcd_Write_String@a,w
   449     06DF  0084               	movwf	4
   450     06E0  120A  118A  2003  120A  118A  	fcall	stringdir
   451     06E5  120A  118A  2726  120A  118A  	fcall	_Lcd_Write_Char
   452     06EA                     l767:
   453     06EA  3001               	movlw	1
   454     06EB  07F5               	addwf	Lcd_Write_String@i,f
   455     06EC  1803               	skipnc
   456     06ED  0AF6               	incf	Lcd_Write_String@i+1,f
   457     06EE  3000               	movlw	0
   458     06EF  07F6               	addwf	Lcd_Write_String@i+1,f
   459     06F0                     l769:
   460     06F0  0875               	movf	Lcd_Write_String@i,w
   461     06F1  0777               	addwf	Lcd_Write_String@a,w
   462     06F2  0084               	movwf	4
   463     06F3  120A  118A  2003  120A  118A  	fcall	stringdir
   464     06F8  3A00               	xorlw	0
   465     06F9  1D03               	skipz
   466     06FA  2EFC               	goto	u151
   467     06FB  2EFD               	goto	u150
   468     06FC                     u151:
   469     06FC  2EDD               	goto	l765
   470     06FD                     u150:
   471     06FD                     l41:
   472     06FD  0008               	return
   473     06FE                     __end_of_Lcd_Write_String:
   474                           
   475                           	psect	text2
   476     0726                     __ptext2:	
   477 ;; *************** function _Lcd_Write_Char *****************
   478 ;; Defined at:
   479 ;;		line 81 in file "./lcd.h"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  a               1    wreg     unsigned char 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  a               1    4[COMMON] unsigned char 
   484 ;;  y               1    3[COMMON] unsigned char 
   485 ;;  temp            1    2[COMMON] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg, status,2, status,0, pclath, cstack
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         3       0       0       0       0
   497 ;;      Temps:          1       0       0       0       0
   498 ;;      Totals:         4       0       0       0       0
   499 ;;Total ram usage:        4 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; Hardware stack levels required when called: 1
   502 ;; This function calls:
   503 ;;		_Lcd_Port
   504 ;; This function is called by:
   505 ;;		_Lcd_Write_String
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509     0726                     _Lcd_Write_Char:	
   510                           ;psect for function _Lcd_Write_Char
   511                           
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   515                           ;Lcd_Write_Char@a stored from wreg
   516     0726  00F4               	movwf	Lcd_Write_Char@a
   517     0727                     l667:
   518                           
   519                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
   520     0727  0874               	movf	Lcd_Write_Char@a,w
   521     0728  390F               	andlw	15
   522     0729  00F2               	movwf	Lcd_Write_Char@temp
   523                           
   524                           ;./lcd.h: 85:    y = a&0xF0;
   525     072A  0874               	movf	Lcd_Write_Char@a,w
   526     072B  39F0               	andlw	240
   527     072C  00F3               	movwf	Lcd_Write_Char@y
   528     072D                     l669:
   529                           
   530                           ;./lcd.h: 86:    PORTDbits.RD2 = 1;
   531     072D  1283               	bcf	3,5	;RP0=0, select bank0
   532     072E  1303               	bcf	3,6	;RP1=0, select bank0
   533     072F  1508               	bsf	8,2	;volatile
   534     0730                     l671:
   535                           
   536                           ;./lcd.h: 87:    Lcd_Port(y>>4);
   537     0730  0873               	movf	Lcd_Write_Char@y,w
   538     0731  00F1               	movwf	??_Lcd_Write_Char
   539     0732  3004               	movlw	4
   540     0733                     u55:
   541     0733  1003               	clrc
   542     0734  0CF1               	rrf	??_Lcd_Write_Char,f
   543     0735  3EFF               	addlw	-1
   544     0736  1D03               	skipz
   545     0737  2F33               	goto	u55
   546     0738  0871               	movf	??_Lcd_Write_Char,w
   547     0739  120A  118A  26B7  120A  118A  	fcall	_Lcd_Port
   548     073E                     l673:
   549                           
   550                           ;./lcd.h: 88:    PORTDbits.RD3 = 1;
   551     073E  1283               	bcf	3,5	;RP0=0, select bank0
   552     073F  1303               	bcf	3,6	;RP1=0, select bank0
   553     0740  1588               	bsf	8,3	;volatile
   554     0741                     l675:
   555                           
   556                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   557     0741  300D               	movlw	13
   558     0742  00F1               	movwf	??_Lcd_Write_Char
   559     0743                     u177:
   560     0743  0BF1               	decfsz	??_Lcd_Write_Char,f
   561     0744  2F43               	goto	u177
   562     0745                     l677:
   563                           
   564                           ;./lcd.h: 90:    PORTDbits.RD3 = 0;
   565     0745  1283               	bcf	3,5	;RP0=0, select bank0
   566     0746  1303               	bcf	3,6	;RP1=0, select bank0
   567     0747  1188               	bcf	8,3	;volatile
   568     0748                     l679:
   569                           
   570                           ;./lcd.h: 91:    Lcd_Port(temp);
   571     0748  0872               	movf	Lcd_Write_Char@temp,w
   572     0749  120A  118A  26B7  120A  118A  	fcall	_Lcd_Port
   573     074E                     l681:
   574                           
   575                           ;./lcd.h: 92:    PORTDbits.RD3 = 1;
   576     074E  1283               	bcf	3,5	;RP0=0, select bank0
   577     074F  1303               	bcf	3,6	;RP1=0, select bank0
   578     0750  1588               	bsf	8,3	;volatile
   579     0751                     l683:
   580                           
   581                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
   582     0751  300D               	movlw	13
   583     0752  00F1               	movwf	??_Lcd_Write_Char
   584     0753                     u187:
   585     0753  0BF1               	decfsz	??_Lcd_Write_Char,f
   586     0754  2F53               	goto	u187
   587     0755                     l685:
   588                           
   589                           ;./lcd.h: 94:    PORTDbits.RD3 = 0;
   590     0755  1283               	bcf	3,5	;RP0=0, select bank0
   591     0756  1303               	bcf	3,6	;RP1=0, select bank0
   592     0757  1188               	bcf	8,3	;volatile
   593     0758                     l35:
   594     0758  0008               	return
   595     0759                     __end_of_Lcd_Write_Char:
   596                           
   597                           	psect	text3
   598     0759                     __ptext3:	
   599 ;; *************** function _Lcd_Set_Cursor *****************
   600 ;; Defined at:
   601 ;;		line 41 in file "./lcd.h"
   602 ;; Parameters:    Size  Location     Type
   603 ;;  a               1    wreg     unsigned char 
   604 ;;  b               1    4[COMMON] unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  a               1    6[COMMON] unsigned char 
   607 ;;  temp            1    9[COMMON] unsigned char 
   608 ;;  y               1    8[COMMON] unsigned char 
   609 ;;  z               1    7[COMMON] unsigned char 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, status,2, status,0, pclath, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         1       0       0       0       0
   620 ;;      Locals:         4       0       0       0       0
   621 ;;      Temps:          1       0       0       0       0
   622 ;;      Totals:         6       0       0       0       0
   623 ;;Total ram usage:        6 bytes
   624 ;; Hardware stack levels used: 1
   625 ;; Hardware stack levels required when called: 2
   626 ;; This function calls:
   627 ;;		_Lcd_Cmd
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633     0759                     _Lcd_Set_Cursor:	
   634                           ;psect for function _Lcd_Set_Cursor
   635                           
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
   639                           ;Lcd_Set_Cursor@a stored from wreg
   640     0759  00F6               	movwf	Lcd_Set_Cursor@a
   641     075A                     l743:
   642                           
   643                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
   644     075A  0376               	decf	Lcd_Set_Cursor@a,w
   645     075B  1D03               	btfss	3,2
   646     075C  2F5E               	goto	u111
   647     075D  2F5F               	goto	u110
   648     075E                     u111:
   649     075E  2F7C               	goto	l753
   650     075F                     u110:
   651     075F                     l745:
   652                           
   653                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
   654     075F  0874               	movf	Lcd_Set_Cursor@b,w
   655     0760  3E7F               	addlw	127
   656     0761  00F9               	movwf	Lcd_Set_Cursor@temp
   657                           
   658                           ;./lcd.h: 47:   z = temp>>4;
   659     0762  0879               	movf	Lcd_Set_Cursor@temp,w
   660     0763  00F5               	movwf	??_Lcd_Set_Cursor
   661     0764  3004               	movlw	4
   662     0765                     u125:
   663     0765  1003               	clrc
   664     0766  0CF5               	rrf	??_Lcd_Set_Cursor,f
   665     0767  3EFF               	addlw	-1
   666     0768  1D03               	skipz
   667     0769  2F65               	goto	u125
   668     076A  0875               	movf	??_Lcd_Set_Cursor,w
   669     076B  00F7               	movwf	Lcd_Set_Cursor@z
   670     076C                     l747:
   671                           
   672                           ;./lcd.h: 48:   y = temp & 0x0F;
   673     076C  0879               	movf	Lcd_Set_Cursor@temp,w
   674     076D  390F               	andlw	15
   675     076E  00F8               	movwf	Lcd_Set_Cursor@y
   676     076F                     l749:
   677                           
   678                           ;./lcd.h: 49:   Lcd_Cmd(z);
   679     076F  0877               	movf	Lcd_Set_Cursor@z,w
   680     0770  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   681     0775                     l751:
   682                           
   683                           ;./lcd.h: 50:   Lcd_Cmd(y);
   684     0775  0878               	movf	Lcd_Set_Cursor@y,w
   685     0776  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   686                           
   687                           ;./lcd.h: 51:  }
   688     077B  2F9E               	goto	l29
   689     077C                     l753:
   690     077C  3002               	movlw	2
   691     077D  0676               	xorwf	Lcd_Set_Cursor@a,w
   692     077E  1D03               	btfss	3,2
   693     077F  2F81               	goto	u131
   694     0780  2F82               	goto	u130
   695     0781                     u131:
   696     0781  2F9E               	goto	l29
   697     0782                     u130:
   698     0782                     l755:
   699                           
   700                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
   701     0782  0874               	movf	Lcd_Set_Cursor@b,w
   702     0783  3EBF               	addlw	191
   703     0784  00F9               	movwf	Lcd_Set_Cursor@temp
   704                           
   705                           ;./lcd.h: 55:   z = temp>>4;
   706     0785  0879               	movf	Lcd_Set_Cursor@temp,w
   707     0786  00F5               	movwf	??_Lcd_Set_Cursor
   708     0787  3004               	movlw	4
   709     0788                     u145:
   710     0788  1003               	clrc
   711     0789  0CF5               	rrf	??_Lcd_Set_Cursor,f
   712     078A  3EFF               	addlw	-1
   713     078B  1D03               	skipz
   714     078C  2F88               	goto	u145
   715     078D  0875               	movf	??_Lcd_Set_Cursor,w
   716     078E  00F7               	movwf	Lcd_Set_Cursor@z
   717     078F                     l757:
   718                           
   719                           ;./lcd.h: 56:   y = temp & 0x0F;
   720     078F  0879               	movf	Lcd_Set_Cursor@temp,w
   721     0790  390F               	andlw	15
   722     0791  00F8               	movwf	Lcd_Set_Cursor@y
   723     0792                     l759:
   724                           
   725                           ;./lcd.h: 57:   Lcd_Cmd(z);
   726     0792  0877               	movf	Lcd_Set_Cursor@z,w
   727     0793  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   728     0798                     l761:
   729                           
   730                           ;./lcd.h: 58:   Lcd_Cmd(y);
   731     0798  0878               	movf	Lcd_Set_Cursor@y,w
   732     0799  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   733     079E                     l29:
   734     079E  0008               	return
   735     079F                     __end_of_Lcd_Set_Cursor:
   736                           
   737                           	psect	text4
   738     079F                     __ptext4:	
   739 ;; *************** function _Lcd_Init *****************
   740 ;; Defined at:
   741 ;;		line 62 in file "./lcd.h"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   755 ;;      Params:         0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0
   757 ;;      Temps:          2       0       0       0       0
   758 ;;      Totals:         2       0       0       0       0
   759 ;;Total ram usage:        2 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 2
   762 ;; This function calls:
   763 ;;		_Lcd_Cmd
   764 ;;		_Lcd_Port
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770     079F                     _Lcd_Init:	
   771                           ;psect for function _Lcd_Init
   772                           
   773     079F                     l709:	
   774                           ;incstack = 0
   775                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   776                           
   777                           
   778                           ;./lcd.h: 64:   Lcd_Port(0x00);
   779     079F  3000               	movlw	0
   780     07A0  120A  118A  26B7  120A  118A  	fcall	_Lcd_Port
   781     07A5                     l711:
   782                           
   783                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
   784     07A5  301A               	movlw	26
   785     07A6  00F5               	movwf	??_Lcd_Init+1
   786     07A7  30F8               	movlw	248
   787     07A8  00F4               	movwf	??_Lcd_Init
   788     07A9                     u197:
   789     07A9  0BF4               	decfsz	??_Lcd_Init,f
   790     07AA  2FA9               	goto	u197
   791     07AB  0BF5               	decfsz	??_Lcd_Init+1,f
   792     07AC  2FA9               	goto	u197
   793     07AD  0000               	nop
   794     07AE                     l713:
   795                           
   796                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
   797     07AE  3003               	movlw	3
   798     07AF  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   799                           
   800                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
   801     07B4  3007               	movlw	7
   802     07B5  00F5               	movwf	??_Lcd_Init+1
   803     07B6  307D               	movlw	125
   804     07B7  00F4               	movwf	??_Lcd_Init
   805     07B8                     u207:
   806     07B8  0BF4               	decfsz	??_Lcd_Init,f
   807     07B9  2FB8               	goto	u207
   808     07BA  0BF5               	decfsz	??_Lcd_Init+1,f
   809     07BB  2FB8               	goto	u207
   810     07BC                     l715:
   811                           
   812                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
   813     07BC  3003               	movlw	3
   814     07BD  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   815     07C2                     l717:
   816                           
   817                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
   818     07C2  300F               	movlw	15
   819     07C3  00F5               	movwf	??_Lcd_Init+1
   820     07C4  3047               	movlw	71
   821     07C5  00F4               	movwf	??_Lcd_Init
   822     07C6                     u217:
   823     07C6  0BF4               	decfsz	??_Lcd_Init,f
   824     07C7  2FC6               	goto	u217
   825     07C8  0BF5               	decfsz	??_Lcd_Init+1,f
   826     07C9  2FC6               	goto	u217
   827     07CA  2FCB               	nop2
   828                           
   829                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
   830     07CB  3003               	movlw	3
   831     07CC  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   832                           
   833                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
   834     07D1  3002               	movlw	2
   835     07D2  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   836                           
   837                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
   838     07D7  3002               	movlw	2
   839     07D8  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   840                           
   841                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
   842     07DD  3008               	movlw	8
   843     07DE  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   844                           
   845                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
   846     07E3  3000               	movlw	0
   847     07E4  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   848                           
   849                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
   850     07E9  300C               	movlw	12
   851     07EA  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   852                           
   853                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
   854     07EF  3000               	movlw	0
   855     07F0  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   856                           
   857                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
   858     07F5  3006               	movlw	6
   859     07F6  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   860     07FB                     l32:
   861     07FB  0008               	return
   862     07FC                     __end_of_Lcd_Init:
   863                           
   864                           	psect	text5
   865     0690                     __ptext5:	
   866 ;; *************** function _Lcd_Clear *****************
   867 ;; Defined at:
   868 ;;		line 35 in file "./lcd.h"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0
   885 ;;      Totals:         0       0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 2
   889 ;; This function calls:
   890 ;;		_Lcd_Cmd
   891 ;; This function is called by:
   892 ;;		_main
   893 ;; This function uses a non-reentrant model
   894 ;;
   895                           
   896     0690                     _Lcd_Clear:	
   897                           ;psect for function _Lcd_Clear
   898                           
   899     0690                     l687:	
   900                           ;incstack = 0
   901                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
   902                           
   903                           
   904                           ;./lcd.h: 37:  Lcd_Cmd(0);
   905     0690  3000               	movlw	0
   906     0691  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   907                           
   908                           ;./lcd.h: 38:  Lcd_Cmd(1);
   909     0696  3001               	movlw	1
   910     0697  120A  118A  269D  120A  118A  	fcall	_Lcd_Cmd
   911     069C                     l23:
   912     069C  0008               	return
   913     069D                     __end_of_Lcd_Clear:
   914                           
   915                           	psect	text6
   916     069D                     __ptext6:	
   917 ;; *************** function _Lcd_Cmd *****************
   918 ;; Defined at:
   919 ;;		line 26 in file "./lcd.h"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  a               1    wreg     unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  a               1    3[COMMON] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, pclath, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         1       0       0       0       0
   935 ;;      Temps:          2       0       0       0       0
   936 ;;      Totals:         3       0       0       0       0
   937 ;;Total ram usage:        3 bytes
   938 ;; Hardware stack levels used: 1
   939 ;; Hardware stack levels required when called: 1
   940 ;; This function calls:
   941 ;;		_Lcd_Port
   942 ;; This function is called by:
   943 ;;		_Lcd_Clear
   944 ;;		_Lcd_Set_Cursor
   945 ;;		_Lcd_Init
   946 ;;		_Lcd_Shift_Right
   947 ;;		_Lcd_Shift_Left
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951     069D                     _Lcd_Cmd:	
   952                           ;psect for function _Lcd_Cmd
   953                           
   954                           
   955                           ;incstack = 0
   956                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   957                           ;Lcd_Cmd@a stored from wreg
   958     069D  00F3               	movwf	Lcd_Cmd@a
   959     069E                     l657:
   960                           
   961                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTDbits.RD2 = 0;
   962     069E  1283               	bcf	3,5	;RP0=0, select bank0
   963     069F  1303               	bcf	3,6	;RP1=0, select bank0
   964     06A0  1108               	bcf	8,2	;volatile
   965     06A1                     l659:
   966                           
   967                           ;./lcd.h: 29:  Lcd_Port(a);
   968     06A1  0873               	movf	Lcd_Cmd@a,w
   969     06A2  120A  118A  26B7  120A  118A  	fcall	_Lcd_Port
   970     06A7                     l661:
   971                           
   972                           ;./lcd.h: 30:  PORTDbits.RD3 = 1;
   973     06A7  1283               	bcf	3,5	;RP0=0, select bank0
   974     06A8  1303               	bcf	3,6	;RP1=0, select bank0
   975     06A9  1588               	bsf	8,3	;volatile
   976     06AA                     l663:
   977                           
   978                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
   979     06AA  3006               	movlw	6
   980     06AB  00F2               	movwf	??_Lcd_Cmd+1
   981     06AC  3030               	movlw	48
   982     06AD  00F1               	movwf	??_Lcd_Cmd
   983     06AE                     u227:
   984     06AE  0BF1               	decfsz	??_Lcd_Cmd,f
   985     06AF  2EAE               	goto	u227
   986     06B0  0BF2               	decfsz	??_Lcd_Cmd+1,f
   987     06B1  2EAE               	goto	u227
   988     06B2  0000               	nop
   989     06B3                     l665:
   990                           
   991                           ;./lcd.h: 32:         PORTDbits.RD3 = 0;
   992     06B3  1283               	bcf	3,5	;RP0=0, select bank0
   993     06B4  1303               	bcf	3,6	;RP1=0, select bank0
   994     06B5  1188               	bcf	8,3	;volatile
   995     06B6                     l20:
   996     06B6  0008               	return
   997     06B7                     __end_of_Lcd_Cmd:
   998                           
   999                           	psect	text7
  1000     06B7                     __ptext7:	
  1001 ;; *************** function _Lcd_Port *****************
  1002 ;; Defined at:
  1003 ;;		line 4 in file "./lcd.h"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  a               1    wreg     unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  a               1    0[COMMON] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         1       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         1       0       0       0       0
  1021 ;;Total ram usage:        1 bytes
  1022 ;; Hardware stack levels used: 1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_Lcd_Cmd
  1027 ;;		_Lcd_Init
  1028 ;;		_Lcd_Write_Char
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     06B7                     _Lcd_Port:	
  1033                           ;psect for function _Lcd_Port
  1034                           
  1035                           
  1036                           ;incstack = 0
  1037                           ; Regs used in _Lcd_Port: [wreg]
  1038                           ;Lcd_Port@a stored from wreg
  1039     06B7  00F0               	movwf	Lcd_Port@a
  1040     06B8                     l647:
  1041                           
  1042                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  1043     06B8  1C70               	btfss	Lcd_Port@a,0
  1044     06B9  2EBB               	goto	u11
  1045     06BA  2EBC               	goto	u10
  1046     06BB                     u11:
  1047     06BB  2EC0               	goto	l9
  1048     06BC                     u10:
  1049     06BC                     l649:
  1050                           
  1051                           ;./lcd.h: 7:   PORTDbits.RD4 = 1;
  1052     06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1053     06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1054     06BE  1608               	bsf	8,4	;volatile
  1055     06BF  2EC3               	goto	l10
  1056     06C0                     l9:	
  1057                           ;./lcd.h: 8:  else
  1058                           
  1059                           
  1060                           ;./lcd.h: 9:   PORTDbits.RD4 = 0;
  1061     06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1062     06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1063     06C2  1208               	bcf	8,4	;volatile
  1064     06C3                     l10:
  1065                           
  1066                           ;./lcd.h: 11:  if(a & 2)
  1067     06C3  1CF0               	btfss	Lcd_Port@a,1
  1068     06C4  2EC6               	goto	u21
  1069     06C5  2EC7               	goto	u20
  1070     06C6                     u21:
  1071     06C6  2EC9               	goto	l11
  1072     06C7                     u20:
  1073     06C7                     l651:
  1074                           
  1075                           ;./lcd.h: 12:   PORTDbits.RD5 = 1;
  1076     06C7  1688               	bsf	8,5	;volatile
  1077     06C8  2ECA               	goto	l12
  1078     06C9                     l11:	
  1079                           ;./lcd.h: 13:  else
  1080                           
  1081                           
  1082                           ;./lcd.h: 14:   PORTDbits.RD5 = 0;
  1083     06C9  1288               	bcf	8,5	;volatile
  1084     06CA                     l12:
  1085                           
  1086                           ;./lcd.h: 16:  if(a & 4)
  1087     06CA  1D70               	btfss	Lcd_Port@a,2
  1088     06CB  2ECD               	goto	u31
  1089     06CC  2ECE               	goto	u30
  1090     06CD                     u31:
  1091     06CD  2ED0               	goto	l13
  1092     06CE                     u30:
  1093     06CE                     l653:
  1094                           
  1095                           ;./lcd.h: 17:   PORTDbits.RD6 = 1;
  1096     06CE  1708               	bsf	8,6	;volatile
  1097     06CF  2ED1               	goto	l14
  1098     06D0                     l13:	
  1099                           ;./lcd.h: 18:  else
  1100                           
  1101                           
  1102                           ;./lcd.h: 19:   PORTDbits.RD6 = 0;
  1103     06D0  1308               	bcf	8,6	;volatile
  1104     06D1                     l14:
  1105                           
  1106                           ;./lcd.h: 21:  if(a & 8)
  1107     06D1  1DF0               	btfss	Lcd_Port@a,3
  1108     06D2  2ED4               	goto	u41
  1109     06D3  2ED5               	goto	u40
  1110     06D4                     u41:
  1111     06D4  2ED7               	goto	l15
  1112     06D5                     u40:
  1113     06D5                     l655:
  1114                           
  1115                           ;./lcd.h: 22:   PORTDbits.RD7 = 1;
  1116     06D5  1788               	bsf	8,7	;volatile
  1117     06D6  2ED8               	goto	l17
  1118     06D7                     l15:	
  1119                           ;./lcd.h: 23:  else
  1120                           
  1121                           
  1122                           ;./lcd.h: 24:   PORTDbits.RD7 = 0;
  1123     06D7  1388               	bcf	8,7	;volatile
  1124     06D8                     l17:
  1125     06D8  0008               	return
  1126     06D9                     __end_of_Lcd_Port:
  1127     007E                     btemp	set	126	;btemp
  1128     007E                     wtemp0	set	126

Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0     874
                                             10 COMMON     2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     243
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     421
                                              4 COMMON     6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sat Jun 24 11:20:27 2023

                       l9 06C0                         pc 0002                        l10 06C3  
                      l11 06C9                        l12 06CA                        l20 06B6  
                      l13 06D0                        l14 06D1                        l15 06D7  
                      l23 069C                        l32 07FB                        l17 06D8  
                      l41 06FD                        l35 0758                        l29 079E  
                      u10 06BC                        u11 06BB                        u20 06C7  
                      u21 06C6                        u30 06CE                        u31 06CD  
                      u40 06D5                        u41 06D4                        u55 0733  
                      fsr 0004                       l711 07A5                       l713 07AE  
                     l651 06C7                       l715 07BC                       l653 06CE  
                     l661 06A7                       l717 07C2                       l709 079F  
                     l655 06D5                       l647 06B8                       l663 06AA  
                     l751 0775                       l743 075A                       l671 0730  
                     l649 06BC                       l665 06B3                       l657 069E  
                     l761 0798                       l745 075F                       l753 077C  
                     l681 074E                       l673 073E                       l659 06A1  
                     l755 0782                       l747 076C                       l683 0751  
                     l675 0741                       l667 0727                       l763 06DA  
                     l771 06FE                       l757 078F                       l749 076F  
                     l685 0755                       l677 0745                       l669 072D  
                     l765 06DD                       l781 0719                       l773 0701  
                     l687 0690                       l759 0792                       l679 0748  
                     l767 06EA                       l775 0706                       l769 06F0  
                     l777 070B                       l779 0713                       u110 075F  
                     u111 075E                       u130 0782                       u131 0781  
                     u125 0765                       u150 06FD                       u207 07B8  
                     u151 06FC                       u217 07C6                       u145 0788  
                     u227 06AE                       u167 071D                       u177 0743  
                     u187 0753                       u197 07A9                       fsr0 0004  
                    STR_1 0009         ?_Lcd_Write_String 0070                      _main 06FE  
                    btemp 007E                      start 0000        ??_Lcd_Write_String 0075  
         __end_of_Lcd_Cmd 06B7                     ?_main 0070                     _TRISD 0088  
                   pclath 000A                     status 0003                     wtemp0 007E  
        __end_of_Lcd_Init 07FC          __end_of_Lcd_Port 06D9           __initialization 07FC  
            __end_of_main 0726                    ??_main 007A                 ??_Lcd_Cmd 0071  
         Lcd_Set_Cursor@a 0076           Lcd_Set_Cursor@b 0074           Lcd_Set_Cursor@y 0078  
         Lcd_Set_Cursor@z 0077   __end_of__initialization 07FC         __end_of_Lcd_Clear 069D  
          __pcstackCOMMON 0070            _Lcd_Set_Cursor 0759                 ?_Lcd_Init 0070  
               ?_Lcd_Port 0070                __pmaintext 06FE    __end_of_Lcd_Set_Cursor 079F  
              ??_Lcd_Init 0074                ??_Lcd_Port 0070                __stringtab 0003  
          _Lcd_Write_Char 0726                   _Lcd_Cmd 069D           ?_Lcd_Set_Cursor 0074  
                 __ptext1 06D9                   __ptext2 0726                   __ptext3 0759  
                 __ptext4 079F                   __ptext5 0690                   __ptext6 069D  
                 __ptext7 06B7    __end_of_Lcd_Write_Char 0759      end_of_initialization 07FC  
               Lcd_Port@a 0070                 _PORTDbits 0008           ?_Lcd_Write_Char 0070  
       Lcd_Write_String@a 0077         Lcd_Write_String@i 0075                 _Lcd_Clear 0690  
        _Lcd_Write_String 06D9       start_initialization 07FC                ?_Lcd_Clear 0070  
         Lcd_Write_Char@a 0074           Lcd_Write_Char@y 0073                 ___latbits 0002  
                ?_Lcd_Cmd 0070          ??_Lcd_Set_Cursor 0075                 __pstrings 0003  
                Lcd_Cmd@a 0073               ??_Lcd_Clear 0074               __stringbase 0008  
        ??_Lcd_Write_Char 0071                  _Lcd_Init 079F                  _Lcd_Port 06B7  
__end_of_Lcd_Write_String 06FE        __end_of__stringtab 0009        Lcd_Write_Char@temp 0072  
               stringcode 0003        Lcd_Set_Cursor@temp 0079                  stringdir 0003  
                stringtab 0003  

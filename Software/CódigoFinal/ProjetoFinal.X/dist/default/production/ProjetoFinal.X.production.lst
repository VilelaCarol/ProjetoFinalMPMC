

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Jun 25 13:15:04 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	dabs	1,0x7E,2
    32     0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67     0000                     	;# 
    68     0001                     	;# 
    69     0002                     	;# 
    70     0003                     	;# 
    71     0004                     	;# 
    72     0005                     	;# 
    73     0006                     	;# 
    74     0007                     	;# 
    75     0008                     	;# 
    76     0009                     	;# 
    77     000A                     	;# 
    78     000B                     	;# 
    79     000C                     	;# 
    80     000D                     	;# 
    81     000E                     	;# 
    82     000E                     	;# 
    83     000F                     	;# 
    84     0010                     	;# 
    85     0011                     	;# 
    86     0012                     	;# 
    87     0013                     	;# 
    88     0014                     	;# 
    89     0015                     	;# 
    90     0015                     	;# 
    91     0016                     	;# 
    92     0017                     	;# 
    93     0018                     	;# 
    94     0019                     	;# 
    95     001A                     	;# 
    96     001B                     	;# 
    97     001B                     	;# 
    98     001C                     	;# 
    99     001D                     	;# 
   100     001E                     	;# 
   101     001F                     	;# 
   102     0081                     	;# 
   103     0085                     	;# 
   104     0086                     	;# 
   105     0087                     	;# 
   106     0088                     	;# 
   107     0089                     	;# 
   108     008C                     	;# 
   109     008D                     	;# 
   110     008E                     	;# 
   111     0091                     	;# 
   112     0092                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     010C                     	;# 
   122     010D                     	;# 
   123     010E                     	;# 
   124     010F                     	;# 
   125     018C                     	;# 
   126     018D                     	;# 
   127     0000                     	;# 
   128     0001                     	;# 
   129     0002                     	;# 
   130     0003                     	;# 
   131     0004                     	;# 
   132     0005                     	;# 
   133     0006                     	;# 
   134     0007                     	;# 
   135     0008                     	;# 
   136     0009                     	;# 
   137     000A                     	;# 
   138     000B                     	;# 
   139     000C                     	;# 
   140     000D                     	;# 
   141     000E                     	;# 
   142     000E                     	;# 
   143     000F                     	;# 
   144     0010                     	;# 
   145     0011                     	;# 
   146     0012                     	;# 
   147     0013                     	;# 
   148     0014                     	;# 
   149     0015                     	;# 
   150     0015                     	;# 
   151     0016                     	;# 
   152     0017                     	;# 
   153     0018                     	;# 
   154     0019                     	;# 
   155     001A                     	;# 
   156     001B                     	;# 
   157     001B                     	;# 
   158     001C                     	;# 
   159     001D                     	;# 
   160     001E                     	;# 
   161     001F                     	;# 
   162     0081                     	;# 
   163     0085                     	;# 
   164     0086                     	;# 
   165     0087                     	;# 
   166     0088                     	;# 
   167     0089                     	;# 
   168     008C                     	;# 
   169     008D                     	;# 
   170     008E                     	;# 
   171     0091                     	;# 
   172     0092                     	;# 
   173     0093                     	;# 
   174     0094                     	;# 
   175     0098                     	;# 
   176     0099                     	;# 
   177     009C                     	;# 
   178     009D                     	;# 
   179     009E                     	;# 
   180     009F                     	;# 
   181     010C                     	;# 
   182     010D                     	;# 
   183     010E                     	;# 
   184     010F                     	;# 
   185     018C                     	;# 
   186     018D                     	;# 
   187                           
   188                           	psect	idataBANK0
   189     047E                     __pidataBANK0:
   190                           
   191                           ;initializer for _porcentagem_PWM
   192     047E  3432               	retlw	50
   193     047F  3400               	retlw	0
   194     000B                     _INTCONbits	set	11
   195     0006                     _PORTBbits	set	6
   196     0015                     _CCPR1L	set	21
   197     0017                     _CCP1CON	set	23
   198     0008                     _PORTDbits	set	8
   199     0059                     _INTF	set	89
   200     0092                     _TMR2ON	set	146
   201     0088                     _TRISD	set	136
   202     0086                     _TRISB	set	134
   203     0087                     _TRISC	set	135
   204     0081                     _OPTION_REGbits	set	129
   205     0092                     _PR2	set	146
   206                           
   207                           	psect	strings
   208     034B                     __pstrings:
   209     034B                     stringtab:
   210     034B                     __stringtab:
   211                           
   212                           ;	String table - string pointers are 1 byte each
   213     034B  1BFF               	btfsc	btemp+1,7
   214     034C  2B55               	ljmp	stringcode
   215     034D  1383               	bcf	3,7
   216     034E  187F               	btfsc	btemp+1,0
   217     034F  1783               	bsf	3,7
   218     0350  0800               	movf	0,w
   219     0351  0A84               	incf	4,f
   220     0352  1903               	skipnz
   221     0353  0AFF               	incf	btemp+1,f
   222     0354  0008               	return
   223     0355                     stringcode:
   224     0355                     stringdir:
   225     0355  3003               	movlw	high stringdir
   226     0356  008A               	movwf	10
   227     0357  0804               	movf	4,w
   228     0358  0A84               	incf	4,f
   229     0359  0782               	addwf	2,f
   230     035A                     __stringbase:
   231     035A  3400               	retlw	0
   232     035B                     __end_of__stringtab:
   233     035B                     STR_1:
   234     035B  344D               	retlw	77	;'M'
   235     035C  3445               	retlw	69	;'E'
   236     035D  344E               	retlw	78	;'N'
   237     035E  3455               	retlw	85	;'U'
   238     035F  3420               	retlw	32	;' '
   239     0360  342D               	retlw	45	;'-'
   240     0361  3420               	retlw	32	;' '
   241     0362  344F               	retlw	79	;'O'
   242     0363  3442               	retlw	66	;'B'
   243     0364  344A               	retlw	74	;'J'
   244     0365  3445               	retlw	69	;'E'
   245     0366  3454               	retlw	84	;'T'
   246     0367  3449               	retlw	73	;'I'
   247     0368  3456               	retlw	86	;'V'
   248     0369  344F               	retlw	79	;'O'
   249     036A  3400               	retlw	0
   250     036B                     STR_3:
   251     036B  344C               	retlw	76	;'L'
   252     036C  3441               	retlw	65	;'A'
   253     036D  344D               	retlw	77	;'M'
   254     036E  3450               	retlw	80	;'P'
   255     036F  3441               	retlw	65	;'A'
   256     0370  3444               	retlw	68	;'D'
   257     0371  3441               	retlw	65	;'A'
   258     0372  3420               	retlw	32	;' '
   259     0373  3445               	retlw	69	;'E'
   260     0374  344D               	retlw	77	;'M'
   261     0375  3420               	retlw	32	;' '
   262     0376  343A               	retlw	58	;':'
   263     0377  3400               	retlw	0
   264     0378                     STR_2:
   265     0378  3435               	retlw	53	;'5'
   266     0379  3430               	retlw	48	;'0'
   267     037A  3430               	retlw	48	;'0'
   268     037B  3420               	retlw	32	;' '
   269     037C  344C               	retlw	76	;'L'
   270     037D  3455               	retlw	85	;'U'
   271     037E  3458               	retlw	88	;'X'
   272     037F  3400               	retlw	0
   273                           
   274                           	psect	cinit
   275     000F                     start_initialization:	
   276                           ; #config settings
   277                           
   278     000F                     __initialization:
   279                           
   280                           ; Initialize objects allocated to BANK0
   281     000F  120A  118A  247E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   282     0014  00C7               	movwf	__pdataBANK0& (0+127)
   283     0015  120A  118A  247F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   284     001A  00C8               	movwf	(__pdataBANK0+1)& (0+127)
   285                           
   286                           ; Clear objects allocated to BANK0
   287     001B  01C3               	clrf	__pbssBANK0& (0+127)
   288     001C  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   289     001D  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   290     001E  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   291                           
   292                           ; Clear objects allocated to COMMON
   293     001F  01FA               	clrf	__pbssCOMMON& (0+127)
   294     0020  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   295     0021                     end_of_initialization:	
   296                           ;End of C runtime variable initialization code
   297                           
   298     0021                     __end_of__initialization:
   299     0021  0183               	clrf	3
   300     0022  120A  118A  2A52   	ljmp	_main	;jump to C main() function
   301                           
   302                           	psect	bssCOMMON
   303     007A                     __pbssCOMMON:
   304     007A                     _btn_mais_aux:
   305     007A                     	ds	2
   306                           
   307                           	psect	bssBANK0
   308     0043                     __pbssBANK0:
   309     0043                     _menu_ativo:
   310     0043                     	ds	2
   311     0045                     _btn_menos_aux:
   312     0045                     	ds	2
   313                           
   314                           	psect	dataBANK0
   315     0047                     __pdataBANK0:
   316     0047                     _porcentagem_PWM:
   317     0047                     	ds	2
   318                           
   319                           	psect	cstackCOMMON
   320     0070                     __pcstackCOMMON:
   321     0070                     ?_Lcd_Port:
   322     0070                     ?_Lcd_Cmd:	
   323                           ; 1 bytes @ 0x0
   324                           
   325     0070                     ?_Lcd_Clear:	
   326                           ; 1 bytes @ 0x0
   327                           
   328     0070                     ?_Lcd_Init:	
   329                           ; 1 bytes @ 0x0
   330                           
   331     0070                     ?_Lcd_Write_Char:	
   332                           ; 1 bytes @ 0x0
   333                           
   334     0070                     ?_configPWMRegs:	
   335                           ; 1 bytes @ 0x0
   336                           
   337     0070                     ?_verificaBtnMais:	
   338                           ; 1 bytes @ 0x0
   339                           
   340     0070                     ?_verificaBtnMenos:	
   341                           ; 1 bytes @ 0x0
   342                           
   343     0070                     ?_interrupcao:	
   344                           ; 1 bytes @ 0x0
   345                           
   346     0070                     ??_interrupcao:	
   347                           ; 1 bytes @ 0x0
   348                           
   349     0070                     ?_handleSetupMenu:	
   350                           ; 1 bytes @ 0x0
   351                           
   352     0070                     ?_configIntExterns:	
   353                           ; 1 bytes @ 0x0
   354                           
   355     0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358                           
   359                           ; 1 bytes @ 0x0
   360     0070                     	ds	2
   361     0072                     ??_Lcd_Port:
   362     0072                     ??_configPWMRegs:	
   363                           ; 1 bytes @ 0x2
   364                           
   365     0072                     ??_verificaBtnMais:	
   366                           ; 1 bytes @ 0x2
   367                           
   368     0072                     ??_verificaBtnMenos:	
   369                           ; 1 bytes @ 0x2
   370                           
   371     0072                     ??_configIntExterns:	
   372                           ; 1 bytes @ 0x2
   373                           
   374     0072                     ?___awdiv:	
   375                           ; 1 bytes @ 0x2
   376                           
   377     0072                     ?___awmod:	
   378                           ; 2 bytes @ 0x2
   379                           
   380     0072                     Lcd_Port@a:	
   381                           ; 2 bytes @ 0x2
   382                           
   383     0072                     ___awdiv@divisor:	
   384                           ; 1 bytes @ 0x2
   385                           
   386     0072                     ___awmod@divisor:	
   387                           ; 2 bytes @ 0x2
   388                           
   389                           
   390                           ; 2 bytes @ 0x2
   391     0072                     	ds	1
   392     0073                     ??_Lcd_Cmd:
   393     0073                     ??_Lcd_Write_Char:	
   394                           ; 1 bytes @ 0x3
   395                           
   396                           
   397                           ; 1 bytes @ 0x3
   398     0073                     	ds	1
   399     0074                     Lcd_Write_Char@temp:
   400     0074                     ___awdiv@dividend:	
   401                           ; 1 bytes @ 0x4
   402                           
   403     0074                     ___awmod@dividend:	
   404                           ; 2 bytes @ 0x4
   405                           
   406                           
   407                           ; 2 bytes @ 0x4
   408     0074                     	ds	1
   409     0075                     Lcd_Cmd@a:
   410     0075                     Lcd_Write_Char@y:	
   411                           ; 1 bytes @ 0x5
   412                           
   413                           
   414                           ; 1 bytes @ 0x5
   415     0075                     	ds	1
   416     0076                     ??_Lcd_Clear:
   417     0076                     ?_Lcd_Set_Cursor:	
   418                           ; 1 bytes @ 0x6
   419                           
   420     0076                     ??_Lcd_Init:	
   421                           ; 1 bytes @ 0x6
   422                           
   423     0076                     ??___awdiv:	
   424                           ; 1 bytes @ 0x6
   425                           
   426     0076                     ??___awmod:	
   427                           ; 1 bytes @ 0x6
   428                           
   429     0076                     Lcd_Set_Cursor@b:	
   430                           ; 1 bytes @ 0x6
   431                           
   432     0076                     Lcd_Write_Char@a:	
   433                           ; 1 bytes @ 0x6
   434                           
   435     0076                     ___awdiv@counter:	
   436                           ; 1 bytes @ 0x6
   437                           
   438     0076                     ___awmod@counter:	
   439                           ; 1 bytes @ 0x6
   440                           
   441                           
   442                           ; 1 bytes @ 0x6
   443     0076                     	ds	1
   444     0077                     ??_Lcd_Set_Cursor:
   445     0077                     ?_Lcd_Write_String:	
   446                           ; 1 bytes @ 0x7
   447                           
   448     0077                     ___awdiv@sign:	
   449                           ; 1 bytes @ 0x7
   450                           
   451     0077                     ___awmod@sign:	
   452                           ; 1 bytes @ 0x7
   453                           
   454     0077                     Lcd_Write_String@a:	
   455                           ; 1 bytes @ 0x7
   456                           
   457                           
   458                           ; 2 bytes @ 0x7
   459     0077                     	ds	1
   460     0078                     ___awdiv@quotient:
   461                           
   462                           ; 2 bytes @ 0x8
   463     0078                     	ds	1
   464     0079                     escreveLCD@linha1:
   465                           
   466                           ; 1 bytes @ 0x9
   467     0079                     	ds	1
   468     007A                     ??_handleSetupMenu:
   469     007A                     ??_main:	
   470                           ; 1 bytes @ 0xA
   471                           
   472                           
   473                           	psect	cstackBANK0
   474     0020                     __pcstackBANK0:	
   475                           ; 1 bytes @ 0xA
   476                           
   477     0020                     ??_Lcd_Write_String:
   478     0020                     ?_intToASCIIinCustomBase:	
   479                           ; 1 bytes @ 0x0
   480                           
   481     0020                     Lcd_Set_Cursor@a:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0020                     intToASCIIinCustomBase@numero:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 2 bytes @ 0x0
   489     0020                     	ds	1
   490     0021                     Lcd_Set_Cursor@z:
   491                           
   492                           ; 1 bytes @ 0x1
   493     0021                     	ds	1
   494     0022                     Lcd_Set_Cursor@y:
   495     0022                     intToASCIIinCustomBase@resultado:	
   496                           ; 1 bytes @ 0x2
   497                           
   498                           
   499                           ; 1 bytes @ 0x2
   500     0022                     	ds	1
   501     0023                     Lcd_Set_Cursor@temp:
   502     0023                     Lcd_Write_String@i:	
   503                           ; 1 bytes @ 0x3
   504                           
   505     0023                     intToASCIIinCustomBase@base:	
   506                           ; 2 bytes @ 0x3
   507                           
   508                           
   509                           ; 2 bytes @ 0x3
   510     0023                     	ds	2
   511     0025                     ??_intToASCIIinCustomBase:
   512     0025                     ?_escreveLCD:	
   513                           ; 1 bytes @ 0x5
   514                           
   515     0025                     escreveLCD@linha2:	
   516                           ; 1 bytes @ 0x5
   517                           
   518                           
   519                           ; 2 bytes @ 0x5
   520     0025                     	ds	2
   521     0027                     ??_escreveLCD:
   522     0027                     intToASCIIinCustomBase@temp:	
   523                           ; 1 bytes @ 0x7
   524                           
   525                           
   526                           ; 1 bytes @ 0x7
   527     0027                     	ds	1
   528     0028                     _intToASCIIinCustomBase$178:
   529                           
   530                           ; 2 bytes @ 0x8
   531     0028                     	ds	2
   532     002A                     intToASCIIinCustomBase@resto:
   533                           
   534                           ; 2 bytes @ 0xA
   535     002A                     	ds	2
   536     002C                     intToASCIIinCustomBase@i:
   537                           
   538                           ; 2 bytes @ 0xC
   539     002C                     	ds	2
   540     002E                     intToASCIIinCustomBase@j:
   541                           
   542                           ; 2 bytes @ 0xE
   543     002E                     	ds	2
   544     0030                     intToASCIIinCustomBase@indice:
   545                           
   546                           ; 2 bytes @ 0x10
   547     0030                     	ds	2
   548     0032                     main@texto_porcentagem:
   549                           
   550                           ; 16 bytes @ 0x12
   551     0032                     	ds	16
   552     0042                     main@texto_menu:
   553                           
   554                           ; 1 bytes @ 0x22
   555     0042                     	ds	1
   556                           
   557                           	psect	maintext
   558     0252                     __pmaintext:	
   559 ;;
   560 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   561 ;;
   562 ;; *************** function _main *****************
   563 ;; Defined at:
   564 ;;		line 164 in file "newmain.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  texto_porcen   16   18[BANK0 ] unsigned char [16]
   569 ;;  texto_menu      1   34[BANK0 ] PTR unsigned char 
   570 ;;		 -> STR_3(13), 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0      17       0       0       0
   582 ;;      Temps:          0       0       0       0       0
   583 ;;      Totals:         0      17       0       0       0
   584 ;;Total ram usage:       17 bytes
   585 ;; Hardware stack levels required when called: 6
   586 ;; This function calls:
   587 ;;		_Lcd_Init
   588 ;;		_configIntExterns
   589 ;;		_configPWMRegs
   590 ;;		_escreveLCD
   591 ;;		_handleSetupMenu
   592 ;;		_intToASCIIinCustomBase
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598     0252                     _main:	
   599                           ;psect for function _main
   600                           
   601     0252                     l1466:	
   602                           ;incstack = 0
   603                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   604                           
   605                           
   606                           ;newmain.c: 166:     TRISC = 0x00;
   607     0252  1683               	bsf	3,5	;RP0=1, select bank1
   608     0253  1303               	bcf	3,6	;RP1=0, select bank1
   609     0254  0187               	clrf	7	;volatile
   610     0255                     l1468:
   611                           
   612                           ;newmain.c: 168:     OPTION_REGbits.INTEDG = 1;
   613     0255  1701               	bsf	1,6	;volatile
   614     0256                     l1470:
   615                           
   616                           ;newmain.c: 169:     TRISB = 1;
   617     0256  3001               	movlw	1
   618     0257  0086               	movwf	6	;volatile
   619     0258                     l1472:
   620                           
   621                           ;newmain.c: 172:     configPWMRegs();
   622     0258  120A  118A  245C  120A  118A  	fcall	_configPWMRegs
   623     025D                     l1474:
   624                           
   625                           ;newmain.c: 175:     TRISD = 0;
   626     025D  1683               	bsf	3,5	;RP0=1, select bank1
   627     025E  1303               	bcf	3,6	;RP1=0, select bank1
   628     025F  0188               	clrf	8	;volatile
   629     0260                     l1476:
   630                           
   631                           ;newmain.c: 176:     Lcd_Init();
   632     0260  120A  118A  2150  120A  118A  	fcall	_Lcd_Init
   633                           
   634                           ;newmain.c: 178:     char* texto_menu;;newmain.c: 180:     texto_menu = "LAMPADA EM :";
   635     0265  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   636     0266  1283               	bcf	3,5	;RP0=0, select bank0
   637     0267  1303               	bcf	3,6	;RP1=0, select bank0
   638     0268  00C2               	movwf	main@texto_menu
   639     0269                     l1478:
   640                           
   641                           ;newmain.c: 183:     configIntExterns();
   642     0269  120A  118A  2477  120A  118A  	fcall	_configIntExterns
   643     026E                     l1480:
   644                           
   645                           ;newmain.c: 185:     {;newmain.c: 186:         handleSetupMenu();
   646     026E  120A  118A  2407  120A  118A  	fcall	_handleSetupMenu
   647     0273                     l1482:
   648                           
   649                           ;newmain.c: 187:         CCPR1L = porcentagem_PWM;
   650     0273  1283               	bcf	3,5	;RP0=0, select bank0
   651     0274  1303               	bcf	3,6	;RP1=0, select bank0
   652     0275  0847               	movf	_porcentagem_PWM,w
   653     0276  0095               	movwf	21	;volatile
   654     0277                     l1484:
   655                           
   656                           ;newmain.c: 188:         char texto_porcentagem [16];;newmain.c: 189:         intToASCII
      +                          inCustomBase (porcentagem_PWM, texto_porcentagem, 10);
   657     0277  0848               	movf	_porcentagem_PWM+1,w
   658     0278  00A1               	movwf	intToASCIIinCustomBase@numero+1
   659     0279  0847               	movf	_porcentagem_PWM,w
   660     027A  00A0               	movwf	intToASCIIinCustomBase@numero
   661     027B  3032               	movlw	(low (main@texto_porcentagem| 0))& (0+255)
   662     027C  00A2               	movwf	intToASCIIinCustomBase@resultado
   663     027D  300A               	movlw	10
   664     027E  00A3               	movwf	intToASCIIinCustomBase@base
   665     027F  3000               	movlw	0
   666     0280  00A4               	movwf	intToASCIIinCustomBase@base+1
   667     0281  120A  118A  2025  120A  118A  	fcall	_intToASCIIinCustomBase
   668     0286                     l1486:
   669                           
   670                           ;newmain.c: 190:         texto_porcentagem [14] = '%';
   671     0286  3025               	movlw	37
   672     0287  1283               	bcf	3,5	;RP0=0, select bank0
   673     0288  1303               	bcf	3,6	;RP1=0, select bank0
   674     0289  00C0               	movwf	main@texto_porcentagem+14
   675     028A                     l1488:
   676                           
   677                           ;newmain.c: 192:         escreveLCD(texto_menu, texto_porcentagem);
   678     028A  3032               	movlw	(low (main@texto_porcentagem| 0))& (0+255)
   679     028B  00A5               	movwf	escreveLCD@linha2
   680     028C  3000               	movlw	0
   681     028D  00A6               	movwf	escreveLCD@linha2+1
   682     028E  0842               	movf	main@texto_menu,w
   683     028F  120A  118A  22DE  120A  118A  	fcall	_escreveLCD
   684     0294  2A6E               	goto	l1480
   685     0295  120A  118A  280C   	ljmp	start
   686     0298                     __end_of_main:
   687                           
   688                           	psect	text1
   689     0025                     __ptext1:	
   690 ;; *************** function _intToASCIIinCustomBase *****************
   691 ;; Defined at:
   692 ;;		line 37 in file "newmain.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;  numero          2    0[BANK0 ] int 
   695 ;;  resultado       1    2[BANK0 ] PTR unsigned char 
   696 ;;		 -> main@texto_porcentagem(16), 
   697 ;;  base            2    3[BANK0 ] int 
   698 ;; Auto vars:     Size  Location     Type
   699 ;;  temp            1    7[BANK0 ] unsigned char 
   700 ;;  indice          2   16[BANK0 ] int 
   701 ;;  j               2   14[BANK0 ] int 
   702 ;;  i               2   12[BANK0 ] int 
   703 ;;  resto           2   10[BANK0 ] int 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       5       0       0       0
   714 ;;      Locals:         0      11       0       0       0
   715 ;;      Temps:          0       2       0       0       0
   716 ;;      Totals:         0      18       0       0       0
   717 ;;Total ram usage:       18 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 2
   720 ;; This function calls:
   721 ;;		___awdiv
   722 ;;		___awmod
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728     0025                     _intToASCIIinCustomBase:	
   729                           ;psect for function _intToASCIIinCustomBase
   730                           
   731     0025                     l1408:	
   732                           ;incstack = 0
   733                           ; Regs used in _intToASCIIinCustomBase: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
   734                           
   735                           
   736                           ;newmain.c: 38:     int indice = 0;
   737     0025  1283               	bcf	3,5	;RP0=0, select bank0
   738     0026  1303               	bcf	3,6	;RP1=0, select bank0
   739     0027  01B0               	clrf	intToASCIIinCustomBase@indice
   740     0028  01B1               	clrf	intToASCIIinCustomBase@indice+1
   741     0029                     l1410:
   742                           
   743                           ;newmain.c: 39:     int resto;;newmain.c: 40:     if (numero == 0) {
   744     0029  0820               	movf	intToASCIIinCustomBase@numero,w
   745     002A  0421               	iorwf	intToASCIIinCustomBase@numero+1,w
   746     002B  1D03               	btfss	3,2
   747     002C  282E               	goto	u1051
   748     002D  282F               	goto	u1050
   749     002E                     u1051:
   750     002E  2897               	goto	l1434
   751     002F                     u1050:
   752     002F                     l1412:
   753                           
   754                           ;newmain.c: 41:         resultado[indice++] = '0';
   755     002F  0822               	movf	intToASCIIinCustomBase@resultado,w
   756     0030  0084               	movwf	4
   757     0031  3030               	movlw	48
   758     0032  1383               	bcf	3,7	;select IRP bank0
   759     0033  0080               	movwf	0
   760     0034                     l1414:
   761     0034  3001               	movlw	1
   762     0035  07B0               	addwf	intToASCIIinCustomBase@indice,f
   763     0036  1803               	skipnc
   764     0037  0AB1               	incf	intToASCIIinCustomBase@indice+1,f
   765     0038  3000               	movlw	0
   766     0039  07B1               	addwf	intToASCIIinCustomBase@indice+1,f
   767     003A                     l1416:
   768                           
   769                           ;newmain.c: 42:         resultado[indice] = '\0';
   770     003A  0830               	movf	intToASCIIinCustomBase@indice,w
   771     003B  0722               	addwf	intToASCIIinCustomBase@resultado,w
   772     003C  00A5               	movwf	??_intToASCIIinCustomBase
   773     003D  0825               	movf	??_intToASCIIinCustomBase,w
   774     003E  0084               	movwf	4
   775     003F  0180               	clrf	0
   776     0040  28E8               	goto	l79
   777     0041                     l1420:
   778                           
   779                           ;newmain.c: 46:         resto = numero % base;
   780     0041  0824               	movf	intToASCIIinCustomBase@base+1,w
   781     0042  00F3               	movwf	___awmod@divisor+1
   782     0043  0823               	movf	intToASCIIinCustomBase@base,w
   783     0044  00F2               	movwf	___awmod@divisor
   784     0045  0821               	movf	intToASCIIinCustomBase@numero+1,w
   785     0046  00F5               	movwf	___awmod@dividend+1
   786     0047  0820               	movf	intToASCIIinCustomBase@numero,w
   787     0048  00F4               	movwf	___awmod@dividend
   788     0049  120A  118A  21AD  120A  118A  	fcall	___awmod
   789     004E  0873               	movf	?___awmod+1,w
   790     004F  1283               	bcf	3,5	;RP0=0, select bank0
   791     0050  1303               	bcf	3,6	;RP1=0, select bank0
   792     0051  00AB               	movwf	intToASCIIinCustomBase@resto+1
   793     0052  0872               	movf	?___awmod,w
   794     0053  00AA               	movwf	intToASCIIinCustomBase@resto
   795     0054                     l1422:
   796                           
   797                           ;newmain.c: 47:         resultado[indice++] = (resto > 9) ? (resto - 10) + 'A' : resto +
      +                           '0';
   798     0054  082B               	movf	intToASCIIinCustomBase@resto+1,w
   799     0055  3A80               	xorlw	128
   800     0056  00FF               	movwf	btemp+1
   801     0057  3080               	movlw	128
   802     0058  027F               	subwf	btemp+1,w
   803     0059  1D03               	skipz
   804     005A  285D               	goto	u1065
   805     005B  300A               	movlw	10
   806     005C  022A               	subwf	intToASCIIinCustomBase@resto,w
   807     005D                     u1065:
   808     005D  1803               	skipnc
   809     005E  2860               	goto	u1061
   810     005F  2861               	goto	u1060
   811     0060                     u1061:
   812     0060  286C               	goto	l1426
   813     0061                     u1060:
   814     0061                     l1424:
   815     0061  1283               	bcf	3,5	;RP0=0, select bank0
   816     0062  1303               	bcf	3,6	;RP1=0, select bank0
   817     0063  082A               	movf	intToASCIIinCustomBase@resto,w
   818     0064  3E30               	addlw	48
   819     0065  00A8               	movwf	_intToASCIIinCustomBase$178
   820     0066  082B               	movf	intToASCIIinCustomBase@resto+1,w
   821     0067  1803               	skipnc
   822     0068  3E01               	addlw	1
   823     0069  3E00               	addlw	0
   824     006A  00A9               	movwf	_intToASCIIinCustomBase$178+1
   825     006B  2876               	goto	l1428
   826     006C                     l1426:
   827     006C  1283               	bcf	3,5	;RP0=0, select bank0
   828     006D  1303               	bcf	3,6	;RP1=0, select bank0
   829     006E  082A               	movf	intToASCIIinCustomBase@resto,w
   830     006F  3E37               	addlw	55
   831     0070  00A8               	movwf	_intToASCIIinCustomBase$178
   832     0071  082B               	movf	intToASCIIinCustomBase@resto+1,w
   833     0072  1803               	skipnc
   834     0073  3E01               	addlw	1
   835     0074  3E00               	addlw	0
   836     0075  00A9               	movwf	_intToASCIIinCustomBase$178+1
   837     0076                     l1428:
   838     0076  0830               	movf	intToASCIIinCustomBase@indice,w
   839     0077  0722               	addwf	intToASCIIinCustomBase@resultado,w
   840     0078  00A5               	movwf	??_intToASCIIinCustomBase
   841     0079  0825               	movf	??_intToASCIIinCustomBase,w
   842     007A  0084               	movwf	4
   843     007B  0828               	movf	_intToASCIIinCustomBase$178,w
   844     007C  1383               	bcf	3,7	;select IRP bank0
   845     007D  0080               	movwf	0
   846     007E                     l1430:
   847     007E  3001               	movlw	1
   848     007F  07B0               	addwf	intToASCIIinCustomBase@indice,f
   849     0080  1803               	skipnc
   850     0081  0AB1               	incf	intToASCIIinCustomBase@indice+1,f
   851     0082  3000               	movlw	0
   852     0083  07B1               	addwf	intToASCIIinCustomBase@indice+1,f
   853     0084                     l1432:
   854                           
   855                           ;newmain.c: 48:         numero /= base;
   856     0084  0824               	movf	intToASCIIinCustomBase@base+1,w
   857     0085  00F3               	movwf	___awdiv@divisor+1
   858     0086  0823               	movf	intToASCIIinCustomBase@base,w
   859     0087  00F2               	movwf	___awdiv@divisor
   860     0088  0821               	movf	intToASCIIinCustomBase@numero+1,w
   861     0089  00F5               	movwf	___awdiv@dividend+1
   862     008A  0820               	movf	intToASCIIinCustomBase@numero,w
   863     008B  00F4               	movwf	___awdiv@dividend
   864     008C  120A  118A  20E9  120A  118A  	fcall	___awdiv
   865     0091  0873               	movf	?___awdiv+1,w
   866     0092  1283               	bcf	3,5	;RP0=0, select bank0
   867     0093  1303               	bcf	3,6	;RP1=0, select bank0
   868     0094  00A1               	movwf	intToASCIIinCustomBase@numero+1
   869     0095  0872               	movf	?___awdiv,w
   870     0096  00A0               	movwf	intToASCIIinCustomBase@numero
   871     0097                     l1434:
   872                           
   873                           ;newmain.c: 45:     while (numero != 0) {
   874     0097  0820               	movf	intToASCIIinCustomBase@numero,w
   875     0098  0421               	iorwf	intToASCIIinCustomBase@numero+1,w
   876     0099  1D03               	btfss	3,2
   877     009A  289C               	goto	u1071
   878     009B  289D               	goto	u1070
   879     009C                     u1071:
   880     009C  2841               	goto	l1420
   881     009D                     u1070:
   882     009D                     l1436:
   883                           
   884                           ;newmain.c: 50:     resultado[indice] = '\0';
   885     009D  0830               	movf	intToASCIIinCustomBase@indice,w
   886     009E  0722               	addwf	intToASCIIinCustomBase@resultado,w
   887     009F  00A5               	movwf	??_intToASCIIinCustomBase
   888     00A0  0825               	movf	??_intToASCIIinCustomBase,w
   889     00A1  0084               	movwf	4
   890     00A2  1383               	bcf	3,7	;select IRP bank0
   891     00A3  0180               	clrf	0
   892     00A4                     l1438:
   893                           
   894                           ;newmain.c: 53:     int i, j;;newmain.c: 54:     for (i = 0, j = indice - 1; i < j; i++,
      +                           j--) {
   895     00A4  01AC               	clrf	intToASCIIinCustomBase@i
   896     00A5  01AD               	clrf	intToASCIIinCustomBase@i+1
   897     00A6                     l1440:
   898     00A6  0830               	movf	intToASCIIinCustomBase@indice,w
   899     00A7  3EFF               	addlw	255
   900     00A8  00AE               	movwf	intToASCIIinCustomBase@j
   901     00A9  0831               	movf	intToASCIIinCustomBase@indice+1,w
   902     00AA  1803               	skipnc
   903     00AB  3E01               	addlw	1
   904     00AC  3EFF               	addlw	255
   905     00AD  00AF               	movwf	intToASCIIinCustomBase@j+1
   906     00AE  28DA               	goto	l1452
   907     00AF                     l1442:
   908                           
   909                           ;newmain.c: 55:         char temp = resultado[i];
   910     00AF  1283               	bcf	3,5	;RP0=0, select bank0
   911     00B0  1303               	bcf	3,6	;RP1=0, select bank0
   912     00B1  082C               	movf	intToASCIIinCustomBase@i,w
   913     00B2  0722               	addwf	intToASCIIinCustomBase@resultado,w
   914     00B3  00A5               	movwf	??_intToASCIIinCustomBase
   915     00B4  0825               	movf	??_intToASCIIinCustomBase,w
   916     00B5  0084               	movwf	4
   917     00B6  1383               	bcf	3,7	;select IRP bank0
   918     00B7  0800               	movf	0,w
   919     00B8  00A7               	movwf	intToASCIIinCustomBase@temp
   920     00B9                     l1444:
   921                           
   922                           ;newmain.c: 56:         resultado[i] = resultado[j];
   923     00B9  082E               	movf	intToASCIIinCustomBase@j,w
   924     00BA  0722               	addwf	intToASCIIinCustomBase@resultado,w
   925     00BB  00A5               	movwf	??_intToASCIIinCustomBase
   926     00BC  0825               	movf	??_intToASCIIinCustomBase,w
   927     00BD  0084               	movwf	4
   928     00BE  0800               	movf	0,w
   929     00BF  00FF               	movwf	btemp+1
   930     00C0  082C               	movf	intToASCIIinCustomBase@i,w
   931     00C1  0722               	addwf	intToASCIIinCustomBase@resultado,w
   932     00C2  00A6               	movwf	??_intToASCIIinCustomBase+1
   933     00C3  0826               	movf	??_intToASCIIinCustomBase+1,w
   934     00C4  0084               	movwf	4
   935     00C5  087F               	movf	btemp+1,w
   936     00C6  0080               	movwf	0
   937     00C7                     l1446:
   938                           
   939                           ;newmain.c: 57:         resultado[j] = temp;
   940     00C7  082E               	movf	intToASCIIinCustomBase@j,w
   941     00C8  0722               	addwf	intToASCIIinCustomBase@resultado,w
   942     00C9  00A5               	movwf	??_intToASCIIinCustomBase
   943     00CA  0825               	movf	??_intToASCIIinCustomBase,w
   944     00CB  0084               	movwf	4
   945     00CC  0827               	movf	intToASCIIinCustomBase@temp,w
   946     00CD  0080               	movwf	0
   947     00CE                     l1448:
   948                           
   949                           ;newmain.c: 58:     }
   950     00CE  3001               	movlw	1
   951     00CF  07AC               	addwf	intToASCIIinCustomBase@i,f
   952     00D0  1803               	skipnc
   953     00D1  0AAD               	incf	intToASCIIinCustomBase@i+1,f
   954     00D2  3000               	movlw	0
   955     00D3  07AD               	addwf	intToASCIIinCustomBase@i+1,f
   956     00D4                     l1450:
   957     00D4  30FF               	movlw	255
   958     00D5  07AE               	addwf	intToASCIIinCustomBase@j,f
   959     00D6  1803               	skipnc
   960     00D7  0AAF               	incf	intToASCIIinCustomBase@j+1,f
   961     00D8  30FF               	movlw	255
   962     00D9  07AF               	addwf	intToASCIIinCustomBase@j+1,f
   963     00DA                     l1452:
   964     00DA  082D               	movf	intToASCIIinCustomBase@i+1,w
   965     00DB  3A80               	xorlw	128
   966     00DC  00A5               	movwf	??_intToASCIIinCustomBase
   967     00DD  082F               	movf	intToASCIIinCustomBase@j+1,w
   968     00DE  3A80               	xorlw	128
   969     00DF  0225               	subwf	??_intToASCIIinCustomBase,w
   970     00E0  1D03               	skipz
   971     00E1  28E4               	goto	u1085
   972     00E2  082E               	movf	intToASCIIinCustomBase@j,w
   973     00E3  022C               	subwf	intToASCIIinCustomBase@i,w
   974     00E4                     u1085:
   975     00E4  1C03               	skipc
   976     00E5  28E7               	goto	u1081
   977     00E6  28E8               	goto	u1080
   978     00E7                     u1081:
   979     00E7  28AF               	goto	l1442
   980     00E8                     u1080:
   981     00E8                     l79:
   982     00E8  0008               	return
   983     00E9                     __end_of_intToASCIIinCustomBase:
   984                           
   985                           	psect	text2
   986     01AD                     __ptext2:	
   987 ;; *************** function ___awmod *****************
   988 ;; Defined at:
   989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awmod.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  divisor         2    2[COMMON] int 
   992 ;;  dividend        2    4[COMMON] int 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  sign            1    7[COMMON] unsigned char 
   995 ;;  counter         1    6[COMMON] unsigned char 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  2    2[COMMON] int 
   998 ;; Registers used:
   999 ;;		wreg, status,2, status,0, btemp+1
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         4       0       0       0       0
  1006 ;;      Locals:         2       0       0       0       0
  1007 ;;      Temps:          0       0       0       0       0
  1008 ;;      Totals:         6       0       0       0       0
  1009 ;;Total ram usage:        6 bytes
  1010 ;; Hardware stack levels used: 1
  1011 ;; Hardware stack levels required when called: 1
  1012 ;; This function calls:
  1013 ;;		Nothing
  1014 ;; This function is called by:
  1015 ;;		_intToASCIIinCustomBase
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019     01AD                     ___awmod:	
  1020                           ;psect for function ___awmod
  1021                           
  1022     01AD                     l1174:	
  1023                           ;incstack = 0
  1024                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1025                           
  1026     01AD  01F7               	clrf	___awmod@sign
  1027     01AE                     l1176:
  1028     01AE  1FF5               	btfss	___awmod@dividend+1,7
  1029     01AF  29B1               	goto	u771
  1030     01B0  29B2               	goto	u770
  1031     01B1                     u771:
  1032     01B1  29B9               	goto	l1182
  1033     01B2                     u770:
  1034     01B2                     l1178:
  1035     01B2  09F4               	comf	___awmod@dividend,f
  1036     01B3  09F5               	comf	___awmod@dividend+1,f
  1037     01B4  0AF4               	incf	___awmod@dividend,f
  1038     01B5  1903               	skipnz
  1039     01B6  0AF5               	incf	___awmod@dividend+1,f
  1040     01B7                     l1180:
  1041     01B7  01F7               	clrf	___awmod@sign
  1042     01B8  0AF7               	incf	___awmod@sign,f
  1043     01B9                     l1182:
  1044     01B9  1FF3               	btfss	___awmod@divisor+1,7
  1045     01BA  29BC               	goto	u781
  1046     01BB  29BD               	goto	u780
  1047     01BC                     u781:
  1048     01BC  29C2               	goto	l1186
  1049     01BD                     u780:
  1050     01BD                     l1184:
  1051     01BD  09F2               	comf	___awmod@divisor,f
  1052     01BE  09F3               	comf	___awmod@divisor+1,f
  1053     01BF  0AF2               	incf	___awmod@divisor,f
  1054     01C0  1903               	skipnz
  1055     01C1  0AF3               	incf	___awmod@divisor+1,f
  1056     01C2                     l1186:
  1057     01C2  0872               	movf	___awmod@divisor,w
  1058     01C3  0473               	iorwf	___awmod@divisor+1,w
  1059     01C4  1903               	btfsc	3,2
  1060     01C5  29C7               	goto	u791
  1061     01C6  29C8               	goto	u790
  1062     01C7                     u791:
  1063     01C7  29F7               	goto	l1204
  1064     01C8                     u790:
  1065     01C8                     l1188:
  1066     01C8  01F6               	clrf	___awmod@counter
  1067     01C9  0AF6               	incf	___awmod@counter,f
  1068     01CA  29D6               	goto	l1194
  1069     01CB                     l1190:
  1070     01CB  3001               	movlw	1
  1071     01CC                     u805:
  1072     01CC  1003               	clrc
  1073     01CD  0DF2               	rlf	___awmod@divisor,f
  1074     01CE  0DF3               	rlf	___awmod@divisor+1,f
  1075     01CF  3EFF               	addlw	-1
  1076     01D0  1D03               	skipz
  1077     01D1  29CC               	goto	u805
  1078     01D2                     l1192:
  1079     01D2  3001               	movlw	1
  1080     01D3  00FF               	movwf	btemp+1
  1081     01D4  087F               	movf	btemp+1,w
  1082     01D5  07F6               	addwf	___awmod@counter,f
  1083     01D6                     l1194:
  1084     01D6  1FF3               	btfss	___awmod@divisor+1,7
  1085     01D7  29D9               	goto	u811
  1086     01D8  29DA               	goto	u810
  1087     01D9                     u811:
  1088     01D9  29CB               	goto	l1190
  1089     01DA                     u810:
  1090     01DA                     l1196:
  1091     01DA  0873               	movf	___awmod@divisor+1,w
  1092     01DB  0275               	subwf	___awmod@dividend+1,w
  1093     01DC  1D03               	skipz
  1094     01DD  29E0               	goto	u825
  1095     01DE  0872               	movf	___awmod@divisor,w
  1096     01DF  0274               	subwf	___awmod@dividend,w
  1097     01E0                     u825:
  1098     01E0  1C03               	skipc
  1099     01E1  29E3               	goto	u821
  1100     01E2  29E4               	goto	u820
  1101     01E3                     u821:
  1102     01E3  29EA               	goto	l1200
  1103     01E4                     u820:
  1104     01E4                     l1198:
  1105     01E4  0872               	movf	___awmod@divisor,w
  1106     01E5  02F4               	subwf	___awmod@dividend,f
  1107     01E6  0873               	movf	___awmod@divisor+1,w
  1108     01E7  1C03               	skipc
  1109     01E8  03F5               	decf	___awmod@dividend+1,f
  1110     01E9  02F5               	subwf	___awmod@dividend+1,f
  1111     01EA                     l1200:
  1112     01EA  3001               	movlw	1
  1113     01EB                     u835:
  1114     01EB  1003               	clrc
  1115     01EC  0CF3               	rrf	___awmod@divisor+1,f
  1116     01ED  0CF2               	rrf	___awmod@divisor,f
  1117     01EE  3EFF               	addlw	-1
  1118     01EF  1D03               	skipz
  1119     01F0  29EB               	goto	u835
  1120     01F1                     l1202:
  1121     01F1  3001               	movlw	1
  1122     01F2  02F6               	subwf	___awmod@counter,f
  1123     01F3  1D03               	btfss	3,2
  1124     01F4  29F6               	goto	u841
  1125     01F5  29F7               	goto	u840
  1126     01F6                     u841:
  1127     01F6  29DA               	goto	l1196
  1128     01F7                     u840:
  1129     01F7                     l1204:
  1130     01F7  0877               	movf	___awmod@sign,w
  1131     01F8  1903               	btfsc	3,2
  1132     01F9  29FB               	goto	u851
  1133     01FA  29FC               	goto	u850
  1134     01FB                     u851:
  1135     01FB  2A01               	goto	l1208
  1136     01FC                     u850:
  1137     01FC                     l1206:
  1138     01FC  09F4               	comf	___awmod@dividend,f
  1139     01FD  09F5               	comf	___awmod@dividend+1,f
  1140     01FE  0AF4               	incf	___awmod@dividend,f
  1141     01FF  1903               	skipnz
  1142     0200  0AF5               	incf	___awmod@dividend+1,f
  1143     0201                     l1208:
  1144     0201  0875               	movf	___awmod@dividend+1,w
  1145     0202  00F3               	movwf	?___awmod+1
  1146     0203  0874               	movf	___awmod@dividend,w
  1147     0204  00F2               	movwf	?___awmod
  1148     0205                     l388:
  1149     0205  0008               	return
  1150     0206                     __end_of___awmod:
  1151                           
  1152                           	psect	text3
  1153     00E9                     __ptext3:	
  1154 ;; *************** function ___awdiv *****************
  1155 ;; Defined at:
  1156 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\awdiv.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;  divisor         2    2[COMMON] int 
  1159 ;;  dividend        2    4[COMMON] int 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;  quotient        2    8[COMMON] int 
  1162 ;;  sign            1    7[COMMON] unsigned char 
  1163 ;;  counter         1    6[COMMON] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2    2[COMMON] int 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, btemp+1
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         4       0       0       0       0
  1174 ;;      Locals:         4       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         8       0       0       0       0
  1177 ;;Total ram usage:        8 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_intToASCIIinCustomBase
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     00E9                     ___awdiv:	
  1188                           ;psect for function ___awdiv
  1189                           
  1190     00E9                     l1130:	
  1191                           ;incstack = 0
  1192                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  1193                           
  1194     00E9  01F7               	clrf	___awdiv@sign
  1195     00EA                     l1132:
  1196     00EA  1FF3               	btfss	___awdiv@divisor+1,7
  1197     00EB  28ED               	goto	u671
  1198     00EC  28EE               	goto	u670
  1199     00ED                     u671:
  1200     00ED  28F5               	goto	l1138
  1201     00EE                     u670:
  1202     00EE                     l1134:
  1203     00EE  09F2               	comf	___awdiv@divisor,f
  1204     00EF  09F3               	comf	___awdiv@divisor+1,f
  1205     00F0  0AF2               	incf	___awdiv@divisor,f
  1206     00F1  1903               	skipnz
  1207     00F2  0AF3               	incf	___awdiv@divisor+1,f
  1208     00F3                     l1136:
  1209     00F3  01F7               	clrf	___awdiv@sign
  1210     00F4  0AF7               	incf	___awdiv@sign,f
  1211     00F5                     l1138:
  1212     00F5  1FF5               	btfss	___awdiv@dividend+1,7
  1213     00F6  28F8               	goto	u681
  1214     00F7  28F9               	goto	u680
  1215     00F8                     u681:
  1216     00F8  2902               	goto	l1144
  1217     00F9                     u680:
  1218     00F9                     l1140:
  1219     00F9  09F4               	comf	___awdiv@dividend,f
  1220     00FA  09F5               	comf	___awdiv@dividend+1,f
  1221     00FB  0AF4               	incf	___awdiv@dividend,f
  1222     00FC  1903               	skipnz
  1223     00FD  0AF5               	incf	___awdiv@dividend+1,f
  1224     00FE                     l1142:
  1225     00FE  3001               	movlw	1
  1226     00FF  00FF               	movwf	btemp+1
  1227     0100  087F               	movf	btemp+1,w
  1228     0101  06F7               	xorwf	___awdiv@sign,f
  1229     0102                     l1144:
  1230     0102  01F8               	clrf	___awdiv@quotient
  1231     0103  01F9               	clrf	___awdiv@quotient+1
  1232     0104                     l1146:
  1233     0104  0872               	movf	___awdiv@divisor,w
  1234     0105  0473               	iorwf	___awdiv@divisor+1,w
  1235     0106  1903               	btfsc	3,2
  1236     0107  2909               	goto	u691
  1237     0108  290A               	goto	u690
  1238     0109                     u691:
  1239     0109  2941               	goto	l1166
  1240     010A                     u690:
  1241     010A                     l1148:
  1242     010A  01F6               	clrf	___awdiv@counter
  1243     010B  0AF6               	incf	___awdiv@counter,f
  1244     010C  2918               	goto	l1154
  1245     010D                     l1150:
  1246     010D  3001               	movlw	1
  1247     010E                     u705:
  1248     010E  1003               	clrc
  1249     010F  0DF2               	rlf	___awdiv@divisor,f
  1250     0110  0DF3               	rlf	___awdiv@divisor+1,f
  1251     0111  3EFF               	addlw	-1
  1252     0112  1D03               	skipz
  1253     0113  290E               	goto	u705
  1254     0114                     l1152:
  1255     0114  3001               	movlw	1
  1256     0115  00FF               	movwf	btemp+1
  1257     0116  087F               	movf	btemp+1,w
  1258     0117  07F6               	addwf	___awdiv@counter,f
  1259     0118                     l1154:
  1260     0118  1FF3               	btfss	___awdiv@divisor+1,7
  1261     0119  291B               	goto	u711
  1262     011A  291C               	goto	u710
  1263     011B                     u711:
  1264     011B  290D               	goto	l1150
  1265     011C                     u710:
  1266     011C                     l1156:
  1267     011C  3001               	movlw	1
  1268     011D                     u725:
  1269     011D  1003               	clrc
  1270     011E  0DF8               	rlf	___awdiv@quotient,f
  1271     011F  0DF9               	rlf	___awdiv@quotient+1,f
  1272     0120  3EFF               	addlw	-1
  1273     0121  1D03               	skipz
  1274     0122  291D               	goto	u725
  1275     0123  0873               	movf	___awdiv@divisor+1,w
  1276     0124  0275               	subwf	___awdiv@dividend+1,w
  1277     0125  1D03               	skipz
  1278     0126  2929               	goto	u735
  1279     0127  0872               	movf	___awdiv@divisor,w
  1280     0128  0274               	subwf	___awdiv@dividend,w
  1281     0129                     u735:
  1282     0129  1C03               	skipc
  1283     012A  292C               	goto	u731
  1284     012B  292D               	goto	u730
  1285     012C                     u731:
  1286     012C  2934               	goto	l1162
  1287     012D                     u730:
  1288     012D                     l1158:
  1289     012D  0872               	movf	___awdiv@divisor,w
  1290     012E  02F4               	subwf	___awdiv@dividend,f
  1291     012F  0873               	movf	___awdiv@divisor+1,w
  1292     0130  1C03               	skipc
  1293     0131  03F5               	decf	___awdiv@dividend+1,f
  1294     0132  02F5               	subwf	___awdiv@dividend+1,f
  1295     0133                     l1160:
  1296     0133  1478               	bsf	___awdiv@quotient,0
  1297     0134                     l1162:
  1298     0134  3001               	movlw	1
  1299     0135                     u745:
  1300     0135  1003               	clrc
  1301     0136  0CF3               	rrf	___awdiv@divisor+1,f
  1302     0137  0CF2               	rrf	___awdiv@divisor,f
  1303     0138  3EFF               	addlw	-1
  1304     0139  1D03               	skipz
  1305     013A  2935               	goto	u745
  1306     013B                     l1164:
  1307     013B  3001               	movlw	1
  1308     013C  02F6               	subwf	___awdiv@counter,f
  1309     013D  1D03               	btfss	3,2
  1310     013E  2940               	goto	u751
  1311     013F  2941               	goto	u750
  1312     0140                     u751:
  1313     0140  291C               	goto	l1156
  1314     0141                     u750:
  1315     0141                     l1166:
  1316     0141  0877               	movf	___awdiv@sign,w
  1317     0142  1903               	btfsc	3,2
  1318     0143  2945               	goto	u761
  1319     0144  2946               	goto	u760
  1320     0145                     u761:
  1321     0145  294B               	goto	l1170
  1322     0146                     u760:
  1323     0146                     l1168:
  1324     0146  09F8               	comf	___awdiv@quotient,f
  1325     0147  09F9               	comf	___awdiv@quotient+1,f
  1326     0148  0AF8               	incf	___awdiv@quotient,f
  1327     0149  1903               	skipnz
  1328     014A  0AF9               	incf	___awdiv@quotient+1,f
  1329     014B                     l1170:
  1330     014B  0879               	movf	___awdiv@quotient+1,w
  1331     014C  00F3               	movwf	?___awdiv+1
  1332     014D  0878               	movf	___awdiv@quotient,w
  1333     014E  00F2               	movwf	?___awdiv
  1334     014F                     l375:
  1335     014F  0008               	return
  1336     0150                     __end_of___awdiv:
  1337                           
  1338                           	psect	text4
  1339     0407                     __ptext4:	
  1340 ;; *************** function _handleSetupMenu *****************
  1341 ;; Defined at:
  1342 ;;		line 141 in file "newmain.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         0       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         0       0       0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used: 1
  1362 ;; Hardware stack levels required when called: 5
  1363 ;; This function calls:
  1364 ;;		_escreveLCD
  1365 ;;		_verificaBtnMais
  1366 ;;		_verificaBtnMenos
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372     0407                     _handleSetupMenu:	
  1373                           ;psect for function _handleSetupMenu
  1374                           
  1375     0407                     l1454:	
  1376                           ;incstack = 0
  1377                           ; Regs used in _handleSetupMenu: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1378                           
  1379                           
  1380                           ;newmain.c: 143:     while (menu_ativo)
  1381     0407  2C1E               	goto	l1460
  1382     0408                     l1456:
  1383                           
  1384                           ;newmain.c: 144:     {;newmain.c: 147:         verificaBtnMais();
  1385     0408  120A  118A  2315  120A  118A  	fcall	_verificaBtnMais
  1386                           
  1387                           ;newmain.c: 148:         verificaBtnMenos();
  1388     040D  120A  118A  23B3  120A  118A  	fcall	_verificaBtnMenos
  1389     0412                     l1458:
  1390                           
  1391                           ;newmain.c: 149:         escreveLCD("MENU - OBJETIVO", "500 LUX");
  1392     0412  301E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1393     0413  1283               	bcf	3,5	;RP0=0, select bank0
  1394     0414  1303               	bcf	3,6	;RP1=0, select bank0
  1395     0415  00A5               	movwf	escreveLCD@linha2
  1396     0416  3080               	movlw	128
  1397     0417  00A6               	movwf	escreveLCD@linha2+1
  1398     0418  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1399     0419  120A  118A  22DE  120A  118A  	fcall	_escreveLCD
  1400     041E                     l1460:
  1401                           
  1402                           ;newmain.c: 143:     while (menu_ativo)
  1403     041E  1283               	bcf	3,5	;RP0=0, select bank0
  1404     041F  1303               	bcf	3,6	;RP1=0, select bank0
  1405     0420  0843               	movf	_menu_ativo,w
  1406     0421  0444               	iorwf	_menu_ativo+1,w
  1407     0422  1D03               	btfss	3,2
  1408     0423  2C25               	goto	u1091
  1409     0424  2C26               	goto	u1090
  1410     0425                     u1091:
  1411     0425  2C08               	goto	l1456
  1412     0426                     u1090:
  1413     0426                     l125:
  1414     0426  0008               	return
  1415     0427                     __end_of_handleSetupMenu:
  1416                           
  1417                           	psect	text5
  1418     03B3                     __ptext5:	
  1419 ;; *************** function _verificaBtnMenos *****************
  1420 ;; Defined at:
  1421 ;;		line 90 in file "newmain.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, btemp+1
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         0       0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_handleSetupMenu
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449     03B3                     _verificaBtnMenos:	
  1450                           ;psect for function _verificaBtnMenos
  1451                           
  1452     03B3                     l1108:	
  1453                           ;incstack = 0
  1454                           ; Regs used in _verificaBtnMenos: [wreg+status,2+status,0+btemp+1]
  1455                           
  1456                           
  1457                           ;newmain.c: 92:     if(!btn_menos_aux && !PORTBbits.RB3){
  1458     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1459     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1460     03B5  0845               	movf	_btn_menos_aux,w
  1461     03B6  0446               	iorwf	_btn_menos_aux+1,w
  1462     03B7  1D03               	btfss	3,2
  1463     03B8  2BBA               	goto	u631
  1464     03B9  2BBB               	goto	u630
  1465     03BA                     u631:
  1466     03BA  2BDE               	goto	l103
  1467     03BB                     u630:
  1468     03BB                     l1110:
  1469     03BB  1986               	btfsc	6,3	;volatile
  1470     03BC  2BBE               	goto	u641
  1471     03BD  2BBF               	goto	u640
  1472     03BE                     u641:
  1473     03BE  2BDE               	goto	l103
  1474     03BF                     u640:
  1475     03BF                     l1112:
  1476                           
  1477                           ;newmain.c: 93:         btn_menos_aux = 1;
  1478     03BF  3001               	movlw	1
  1479     03C0  00C5               	movwf	_btn_menos_aux
  1480     03C1  3000               	movlw	0
  1481     03C2  00C6               	movwf	_btn_menos_aux+1
  1482     03C3                     l1114:
  1483                           
  1484                           ;newmain.c: 94:         if(porcentagem_PWM>0){
  1485     03C3  0848               	movf	_porcentagem_PWM+1,w
  1486     03C4  3A80               	xorlw	128
  1487     03C5  00FF               	movwf	btemp+1
  1488     03C6  3080               	movlw	128
  1489     03C7  027F               	subwf	btemp+1,w
  1490     03C8  1D03               	skipz
  1491     03C9  2BCC               	goto	u655
  1492     03CA  3001               	movlw	1
  1493     03CB  0247               	subwf	_porcentagem_PWM,w
  1494     03CC                     u655:
  1495     03CC  1C03               	skipc
  1496     03CD  2BCF               	goto	u651
  1497     03CE  2BD0               	goto	u650
  1498     03CF                     u651:
  1499     03CF  2BD9               	goto	l1118
  1500     03D0                     u650:
  1501     03D0                     l1116:
  1502                           
  1503                           ;newmain.c: 95:             porcentagem_PWM-=10;
  1504     03D0  30F6               	movlw	246
  1505     03D1  1283               	bcf	3,5	;RP0=0, select bank0
  1506     03D2  1303               	bcf	3,6	;RP1=0, select bank0
  1507     03D3  07C7               	addwf	_porcentagem_PWM,f
  1508     03D4  1803               	skipnc
  1509     03D5  0AC8               	incf	_porcentagem_PWM+1,f
  1510     03D6  30FF               	movlw	255
  1511     03D7  07C8               	addwf	_porcentagem_PWM+1,f
  1512                           
  1513                           ;newmain.c: 96:         }
  1514     03D8  2BE4               	goto	l108
  1515     03D9                     l1118:
  1516                           
  1517                           ;newmain.c: 98:             porcentagem_PWM = 0;
  1518     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  1519     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  1520     03DB  01C7               	clrf	_porcentagem_PWM
  1521     03DC  01C8               	clrf	_porcentagem_PWM+1
  1522     03DD  2BE4               	goto	l108
  1523     03DE                     l103:	
  1524                           ;newmain.c: 101:     else{
  1525                           
  1526                           
  1527                           ;newmain.c: 102:         if(PORTBbits.RB3){
  1528     03DE  1D86               	btfss	6,3	;volatile
  1529     03DF  2BE1               	goto	u661
  1530     03E0  2BE2               	goto	u660
  1531     03E1                     u661:
  1532     03E1  2BE4               	goto	l108
  1533     03E2                     u660:
  1534     03E2                     l1120:
  1535                           
  1536                           ;newmain.c: 103:             btn_menos_aux = 0;
  1537     03E2  01C5               	clrf	_btn_menos_aux
  1538     03E3  01C6               	clrf	_btn_menos_aux+1
  1539     03E4                     l108:
  1540     03E4  0008               	return
  1541     03E5                     __end_of_verificaBtnMenos:
  1542                           
  1543                           	psect	text6
  1544     0315                     __ptext6:	
  1545 ;; *************** function _verificaBtnMais *****************
  1546 ;; Defined at:
  1547 ;;		line 70 in file "newmain.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2, status,0, btemp+1
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1561 ;;      Params:         0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 1
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_handleSetupMenu
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575     0315                     _verificaBtnMais:	
  1576                           ;psect for function _verificaBtnMais
  1577                           
  1578     0315                     l1094:	
  1579                           ;incstack = 0
  1580                           ; Regs used in _verificaBtnMais: [wreg+status,2+status,0+btemp+1]
  1581                           
  1582                           
  1583                           ;newmain.c: 73:     if(!btn_mais_aux && !PORTBbits.RB2){
  1584     0315  087A               	movf	_btn_mais_aux,w
  1585     0316  047B               	iorwf	_btn_mais_aux+1,w
  1586     0317  1D03               	btfss	3,2
  1587     0318  2B1A               	goto	u591
  1588     0319  2B1B               	goto	u590
  1589     031A                     u591:
  1590     031A  2B42               	goto	l95
  1591     031B                     u590:
  1592     031B                     l1096:
  1593     031B  1283               	bcf	3,5	;RP0=0, select bank0
  1594     031C  1303               	bcf	3,6	;RP1=0, select bank0
  1595     031D  1906               	btfsc	6,2	;volatile
  1596     031E  2B20               	goto	u601
  1597     031F  2B21               	goto	u600
  1598     0320                     u601:
  1599     0320  2B42               	goto	l95
  1600     0321                     u600:
  1601     0321                     l1098:
  1602                           
  1603                           ;newmain.c: 74:         btn_mais_aux = 1;
  1604     0321  3001               	movlw	1
  1605     0322  00FA               	movwf	_btn_mais_aux
  1606     0323  3000               	movlw	0
  1607     0324  00FB               	movwf	_btn_mais_aux+1
  1608     0325                     l1100:
  1609                           
  1610                           ;newmain.c: 75:         if(porcentagem_PWM<100){
  1611     0325  0848               	movf	_porcentagem_PWM+1,w
  1612     0326  3A80               	xorlw	128
  1613     0327  00FF               	movwf	btemp+1
  1614     0328  3080               	movlw	128
  1615     0329  027F               	subwf	btemp+1,w
  1616     032A  1D03               	skipz
  1617     032B  2B2E               	goto	u615
  1618     032C  3064               	movlw	100
  1619     032D  0247               	subwf	_porcentagem_PWM,w
  1620     032E                     u615:
  1621     032E  1803               	skipnc
  1622     032F  2B31               	goto	u611
  1623     0330  2B32               	goto	u610
  1624     0331                     u611:
  1625     0331  2B3B               	goto	l1104
  1626     0332                     u610:
  1627     0332                     l1102:
  1628                           
  1629                           ;newmain.c: 76:             porcentagem_PWM+=10;
  1630     0332  300A               	movlw	10
  1631     0333  1283               	bcf	3,5	;RP0=0, select bank0
  1632     0334  1303               	bcf	3,6	;RP1=0, select bank0
  1633     0335  07C7               	addwf	_porcentagem_PWM,f
  1634     0336  1803               	skipnc
  1635     0337  0AC8               	incf	_porcentagem_PWM+1,f
  1636     0338  3000               	movlw	0
  1637     0339  07C8               	addwf	_porcentagem_PWM+1,f
  1638                           
  1639                           ;newmain.c: 77:         }
  1640     033A  2B4A               	goto	l100
  1641     033B                     l1104:
  1642                           
  1643                           ;newmain.c: 79:             porcentagem_PWM = 100;
  1644     033B  3064               	movlw	100
  1645     033C  1283               	bcf	3,5	;RP0=0, select bank0
  1646     033D  1303               	bcf	3,6	;RP1=0, select bank0
  1647     033E  00C7               	movwf	_porcentagem_PWM
  1648     033F  3000               	movlw	0
  1649     0340  00C8               	movwf	_porcentagem_PWM+1
  1650     0341  2B4A               	goto	l100
  1651     0342                     l95:	
  1652                           ;newmain.c: 82:     else{
  1653                           
  1654                           
  1655                           ;newmain.c: 83:         if(PORTBbits.RB2){
  1656     0342  1283               	bcf	3,5	;RP0=0, select bank0
  1657     0343  1303               	bcf	3,6	;RP1=0, select bank0
  1658     0344  1D06               	btfss	6,2	;volatile
  1659     0345  2B47               	goto	u621
  1660     0346  2B48               	goto	u620
  1661     0347                     u621:
  1662     0347  2B4A               	goto	l100
  1663     0348                     u620:
  1664     0348                     l1106:
  1665                           
  1666                           ;newmain.c: 84:             btn_mais_aux = 0;
  1667     0348  01FA               	clrf	_btn_mais_aux
  1668     0349  01FB               	clrf	_btn_mais_aux+1
  1669     034A                     l100:
  1670     034A  0008               	return
  1671     034B                     __end_of_verificaBtnMais:
  1672                           
  1673                           	psect	text7
  1674     02DE                     __ptext7:	
  1675 ;; *************** function _escreveLCD *****************
  1676 ;; Defined at:
  1677 ;;		line 126 in file "newmain.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  linha1          1    wreg     PTR unsigned char 
  1680 ;;		 -> STR_3(13), STR_1(16), 
  1681 ;;  linha2          2    5[BANK0 ] PTR unsigned char 
  1682 ;;		 -> main@texto_porcentagem(16), STR_2(8), 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  linha1          1    9[COMMON] PTR unsigned char 
  1685 ;;		 -> STR_3(13), STR_1(16), 
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1695 ;;      Params:         0       2       0       0       0
  1696 ;;      Locals:         1       0       0       0       0
  1697 ;;      Temps:          0       2       0       0       0
  1698 ;;      Totals:         1       4       0       0       0
  1699 ;;Total ram usage:        5 bytes
  1700 ;; Hardware stack levels used: 1
  1701 ;; Hardware stack levels required when called: 4
  1702 ;; This function calls:
  1703 ;;		_Lcd_Clear
  1704 ;;		_Lcd_Set_Cursor
  1705 ;;		_Lcd_Write_String
  1706 ;; This function is called by:
  1707 ;;		_handleSetupMenu
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712     02DE                     _escreveLCD:	
  1713                           ;psect for function _escreveLCD
  1714                           
  1715                           
  1716                           ;incstack = 0
  1717                           ; Regs used in _escreveLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1718                           ;escreveLCD@linha1 stored from wreg
  1719     02DE  00F9               	movwf	escreveLCD@linha1
  1720     02DF                     l1390:
  1721                           
  1722                           ;newmain.c: 126: void escreveLCD(char* linha1, char* linha2);newmain.c: 127: {;newmain.c
      +                          : 129:     Lcd_Clear();
  1723     02DF  120A  118A  246A  120A  118A  	fcall	_Lcd_Clear
  1724                           
  1725                           ;newmain.c: 130:     Lcd_Set_Cursor(1,1);
  1726     02E4  01F6               	clrf	Lcd_Set_Cursor@b
  1727     02E5  0AF6               	incf	Lcd_Set_Cursor@b,f
  1728     02E6  3001               	movlw	1
  1729     02E7  120A  118A  2206  120A  118A  	fcall	_Lcd_Set_Cursor
  1730     02EC                     l1392:
  1731                           
  1732                           ;newmain.c: 131:     Lcd_Write_String(linha1);
  1733     02EC  0879               	movf	escreveLCD@linha1,w
  1734     02ED  00F7               	movwf	Lcd_Write_String@a
  1735     02EE  3000               	movlw	0
  1736     02EF  1D03               	btfss	3,2
  1737     02F0  3080               	movlw	128
  1738     02F1  00F8               	movwf	Lcd_Write_String@a+1
  1739     02F2  120A  118A  2298  120A  118A  	fcall	_Lcd_Write_String
  1740     02F7                     l1394:
  1741                           
  1742                           ;newmain.c: 133:     Lcd_Set_Cursor(2,1);
  1743     02F7  01F6               	clrf	Lcd_Set_Cursor@b
  1744     02F8  0AF6               	incf	Lcd_Set_Cursor@b,f
  1745     02F9  3002               	movlw	2
  1746     02FA  120A  118A  2206  120A  118A  	fcall	_Lcd_Set_Cursor
  1747                           
  1748                           ;newmain.c: 134:     Lcd_Write_String(linha2);
  1749     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1750     0300  1303               	bcf	3,6	;RP1=0, select bank0
  1751     0301  0825               	movf	escreveLCD@linha2,w
  1752     0302  00F7               	movwf	Lcd_Write_String@a
  1753     0303  0826               	movf	escreveLCD@linha2+1,w
  1754     0304  00F8               	movwf	Lcd_Write_String@a+1
  1755     0305  120A  118A  2298  120A  118A  	fcall	_Lcd_Write_String
  1756     030A                     l1396:
  1757                           
  1758                           ;newmain.c: 136:     _delay((unsigned long)((100)*(4000000/4000.0)));
  1759     030A  3082               	movlw	130
  1760     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1761     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1762     030D  00A8               	movwf	??_escreveLCD+1
  1763     030E  30DD               	movlw	221
  1764     030F  00A7               	movwf	??_escreveLCD
  1765     0310                     u1107:
  1766     0310  0BA7               	decfsz	??_escreveLCD,f
  1767     0311  2B10               	goto	u1107
  1768     0312  0BA8               	decfsz	??_escreveLCD+1,f
  1769     0313  2B10               	goto	u1107
  1770     0314                     l119:
  1771     0314  0008               	return
  1772     0315                     __end_of_escreveLCD:
  1773                           
  1774                           	psect	text8
  1775     0298                     __ptext8:	
  1776 ;; *************** function _Lcd_Write_String *****************
  1777 ;; Defined at:
  1778 ;;		line 97 in file "./lcd.h"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;  a               2    7[COMMON] PTR unsigned char 
  1781 ;;		 -> main@texto_porcentagem(16), STR_3(13), STR_2(8), STR_1(16), 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  i               2    3[BANK0 ] int 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         2       0       0       0       0
  1794 ;;      Locals:         0       2       0       0       0
  1795 ;;      Temps:          0       3       0       0       0
  1796 ;;      Totals:         2       5       0       0       0
  1797 ;;Total ram usage:        7 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; Hardware stack levels required when called: 3
  1800 ;; This function calls:
  1801 ;;		_Lcd_Write_Char
  1802 ;; This function is called by:
  1803 ;;		_escreveLCD
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807     0298                     _Lcd_Write_String:	
  1808                           ;psect for function _Lcd_Write_String
  1809                           
  1810     0298                     l1382:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1813                           
  1814                           
  1815                           ;./lcd.h: 97: void Lcd_Write_String(char *a);./lcd.h: 98: {;./lcd.h: 99:  int i;;./lcd.h
      +                          : 100:  for(i=0;a[i]!='\0';i++)
  1816     0298  1283               	bcf	3,5	;RP0=0, select bank0
  1817     0299  1303               	bcf	3,6	;RP1=0, select bank0
  1818     029A  01A3               	clrf	Lcd_Write_String@i
  1819     029B  01A4               	clrf	Lcd_Write_String@i+1
  1820     029C  2AC1               	goto	l1388
  1821     029D                     l1384:
  1822                           
  1823                           ;./lcd.h: 101:     Lcd_Write_Char(a[i]);
  1824     029D  0823               	movf	Lcd_Write_String@i,w
  1825     029E  0777               	addwf	Lcd_Write_String@a,w
  1826     029F  00A1               	movwf	??_Lcd_Write_String+1
  1827     02A0  0878               	movf	Lcd_Write_String@a+1,w
  1828     02A1  00A0               	movwf	??_Lcd_Write_String
  1829     02A2  1803               	skipnc
  1830     02A3  0AA0               	incf	??_Lcd_Write_String,f
  1831     02A4  1FA3               	btfss	Lcd_Write_String@i,7
  1832     02A5  2AA7               	goto	u1020
  1833     02A6  03A0               	decf	??_Lcd_Write_String,f
  1834     02A7                     u1020:
  1835     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1836     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1837     02A9  0820               	movf	??_Lcd_Write_String,w
  1838     02AA  00A2               	movwf	??_Lcd_Write_String+2
  1839     02AB  0822               	movf	??_Lcd_Write_String+2,w
  1840     02AC  00FF               	movwf	btemp+1
  1841     02AD  0821               	movf	??_Lcd_Write_String+1,w
  1842     02AE  0084               	movwf	4
  1843     02AF  120A  118A  234B  120A  118A  	fcall	stringtab
  1844     02B4  120A  118A  2380  120A  118A  	fcall	_Lcd_Write_Char
  1845     02B9                     l1386:
  1846     02B9  3001               	movlw	1
  1847     02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1848     02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1849     02BC  07A3               	addwf	Lcd_Write_String@i,f
  1850     02BD  1803               	skipnc
  1851     02BE  0AA4               	incf	Lcd_Write_String@i+1,f
  1852     02BF  3000               	movlw	0
  1853     02C0  07A4               	addwf	Lcd_Write_String@i+1,f
  1854     02C1                     l1388:
  1855     02C1  0823               	movf	Lcd_Write_String@i,w
  1856     02C2  0777               	addwf	Lcd_Write_String@a,w
  1857     02C3  00A1               	movwf	??_Lcd_Write_String+1
  1858     02C4  0878               	movf	Lcd_Write_String@a+1,w
  1859     02C5  00A0               	movwf	??_Lcd_Write_String
  1860     02C6  1803               	skipnc
  1861     02C7  0AA0               	incf	??_Lcd_Write_String,f
  1862     02C8  1FA3               	btfss	Lcd_Write_String@i,7
  1863     02C9  2ACB               	goto	u1030
  1864     02CA  03A0               	decf	??_Lcd_Write_String,f
  1865     02CB                     u1030:
  1866     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1867     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1868     02CD  0820               	movf	??_Lcd_Write_String,w
  1869     02CE  00A2               	movwf	??_Lcd_Write_String+2
  1870     02CF  0822               	movf	??_Lcd_Write_String+2,w
  1871     02D0  00FF               	movwf	btemp+1
  1872     02D1  0821               	movf	??_Lcd_Write_String+1,w
  1873     02D2  0084               	movwf	4
  1874     02D3  120A  118A  234B  120A  118A  	fcall	stringtab
  1875     02D8  3A00               	xorlw	0
  1876     02D9  1D03               	skipz
  1877     02DA  2ADC               	goto	u1041
  1878     02DB  2ADD               	goto	u1040
  1879     02DC                     u1041:
  1880     02DC  2A9D               	goto	l1384
  1881     02DD                     u1040:
  1882     02DD                     l61:
  1883     02DD  0008               	return
  1884     02DE                     __end_of_Lcd_Write_String:
  1885                           
  1886                           	psect	text9
  1887     0380                     __ptext9:	
  1888 ;; *************** function _Lcd_Write_Char *****************
  1889 ;; Defined at:
  1890 ;;		line 81 in file "./lcd.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  a               1    wreg     unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  a               1    6[COMMON] unsigned char 
  1895 ;;  y               1    5[COMMON] unsigned char 
  1896 ;;  temp            1    4[COMMON] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         3       0       0       0       0
  1908 ;;      Temps:          1       0       0       0       0
  1909 ;;      Totals:         4       0       0       0       0
  1910 ;;Total ram usage:        4 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 2
  1913 ;; This function calls:
  1914 ;;		_Lcd_Port
  1915 ;; This function is called by:
  1916 ;;		_Lcd_Write_String
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920     0380                     _Lcd_Write_Char:	
  1921                           ;psect for function _Lcd_Write_Char
  1922                           
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1926                           ;Lcd_Write_Char@a stored from wreg
  1927     0380  00F6               	movwf	Lcd_Write_Char@a
  1928     0381                     l1340:
  1929                           
  1930                           ;./lcd.h: 81: void Lcd_Write_Char(char a);./lcd.h: 82: {;./lcd.h: 83:    char temp,y;;./
      +                          lcd.h: 84:    temp = a&0x0F;
  1931     0381  0876               	movf	Lcd_Write_Char@a,w
  1932     0382  390F               	andlw	15
  1933     0383  00F4               	movwf	Lcd_Write_Char@temp
  1934                           
  1935                           ;./lcd.h: 85:    y = a&0xF0;
  1936     0384  0876               	movf	Lcd_Write_Char@a,w
  1937     0385  39F0               	andlw	240
  1938     0386  00F5               	movwf	Lcd_Write_Char@y
  1939     0387                     l1342:
  1940                           
  1941                           ;./lcd.h: 86:    PORTDbits.RD2 = 1;
  1942     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1943     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1944     0389  1508               	bsf	8,2	;volatile
  1945     038A                     l1344:
  1946                           
  1947                           ;./lcd.h: 87:    Lcd_Port(y>>4);
  1948     038A  0875               	movf	Lcd_Write_Char@y,w
  1949     038B  00F3               	movwf	??_Lcd_Write_Char
  1950     038C  3004               	movlw	4
  1951     038D                     u975:
  1952     038D  1003               	clrc
  1953     038E  0CF3               	rrf	??_Lcd_Write_Char,f
  1954     038F  3EFF               	addlw	-1
  1955     0390  1D03               	skipz
  1956     0391  2B8D               	goto	u975
  1957     0392  0873               	movf	??_Lcd_Write_Char,w
  1958     0393  120A  118A  23E5  120A  118A  	fcall	_Lcd_Port
  1959     0398                     l1346:
  1960                           
  1961                           ;./lcd.h: 88:    PORTDbits.RD3 = 1;
  1962     0398  1283               	bcf	3,5	;RP0=0, select bank0
  1963     0399  1303               	bcf	3,6	;RP1=0, select bank0
  1964     039A  1588               	bsf	8,3	;volatile
  1965     039B                     l1348:
  1966                           
  1967                           ;./lcd.h: 89:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1968     039B  300D               	movlw	13
  1969     039C  00F3               	movwf	??_Lcd_Write_Char
  1970     039D                     u1117:
  1971     039D  0BF3               	decfsz	??_Lcd_Write_Char,f
  1972     039E  2B9D               	goto	u1117
  1973     039F                     l1350:
  1974                           
  1975                           ;./lcd.h: 90:    PORTDbits.RD3 = 0;
  1976     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1977     03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1978     03A1  1188               	bcf	8,3	;volatile
  1979     03A2                     l1352:
  1980                           
  1981                           ;./lcd.h: 91:    Lcd_Port(temp);
  1982     03A2  0874               	movf	Lcd_Write_Char@temp,w
  1983     03A3  120A  118A  23E5  120A  118A  	fcall	_Lcd_Port
  1984     03A8                     l1354:
  1985                           
  1986                           ;./lcd.h: 92:    PORTDbits.RD3 = 1;
  1987     03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1988     03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1989     03AA  1588               	bsf	8,3	;volatile
  1990     03AB                     l1356:
  1991                           
  1992                           ;./lcd.h: 93:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  1993     03AB  300D               	movlw	13
  1994     03AC  00F3               	movwf	??_Lcd_Write_Char
  1995     03AD                     u1127:
  1996     03AD  0BF3               	decfsz	??_Lcd_Write_Char,f
  1997     03AE  2BAD               	goto	u1127
  1998     03AF                     l1358:
  1999                           
  2000                           ;./lcd.h: 94:    PORTDbits.RD3 = 0;
  2001     03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2002     03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2003     03B1  1188               	bcf	8,3	;volatile
  2004     03B2                     l55:
  2005     03B2  0008               	return
  2006     03B3                     __end_of_Lcd_Write_Char:
  2007                           
  2008                           	psect	text10
  2009     0206                     __ptext10:	
  2010 ;; *************** function _Lcd_Set_Cursor *****************
  2011 ;; Defined at:
  2012 ;;		line 41 in file "./lcd.h"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  a               1    wreg     unsigned char 
  2015 ;;  b               1    6[COMMON] unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  a               1    0[BANK0 ] unsigned char 
  2018 ;;  temp            1    3[BANK0 ] unsigned char 
  2019 ;;  y               1    2[BANK0 ] unsigned char 
  2020 ;;  z               1    1[BANK0 ] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2030 ;;      Params:         1       0       0       0       0
  2031 ;;      Locals:         0       4       0       0       0
  2032 ;;      Temps:          1       0       0       0       0
  2033 ;;      Totals:         2       4       0       0       0
  2034 ;;Total ram usage:        6 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 3
  2037 ;; This function calls:
  2038 ;;		_Lcd_Cmd
  2039 ;; This function is called by:
  2040 ;;		_escreveLCD
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044     0206                     _Lcd_Set_Cursor:	
  2045                           ;psect for function _Lcd_Set_Cursor
  2046                           
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2050                           ;Lcd_Set_Cursor@a stored from wreg
  2051     0206  1283               	bcf	3,5	;RP0=0, select bank0
  2052     0207  1303               	bcf	3,6	;RP1=0, select bank0
  2053     0208  00A0               	movwf	Lcd_Set_Cursor@a
  2054     0209                     l1362:
  2055                           
  2056                           ;./lcd.h: 41: void Lcd_Set_Cursor(char a, char b);./lcd.h: 42: {;./lcd.h: 43:  char temp
      +                          ,z,y;;./lcd.h: 44:  if(a == 1)
  2057     0209  0320               	decf	Lcd_Set_Cursor@a,w
  2058     020A  1D03               	btfss	3,2
  2059     020B  2A0D               	goto	u981
  2060     020C  2A0E               	goto	u980
  2061     020D                     u981:
  2062     020D  2A2D               	goto	l1372
  2063     020E                     u980:
  2064     020E                     l1364:
  2065                           
  2066                           ;./lcd.h: 45:  {;./lcd.h: 46:    temp = 0x80 + b - 1;
  2067     020E  0876               	movf	Lcd_Set_Cursor@b,w
  2068     020F  3E7F               	addlw	127
  2069     0210  00A3               	movwf	Lcd_Set_Cursor@temp
  2070                           
  2071                           ;./lcd.h: 47:   z = temp>>4;
  2072     0211  0823               	movf	Lcd_Set_Cursor@temp,w
  2073     0212  00F7               	movwf	??_Lcd_Set_Cursor
  2074     0213  3004               	movlw	4
  2075     0214                     u995:
  2076     0214  1003               	clrc
  2077     0215  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2078     0216  3EFF               	addlw	-1
  2079     0217  1D03               	skipz
  2080     0218  2A14               	goto	u995
  2081     0219  0877               	movf	??_Lcd_Set_Cursor,w
  2082     021A  00A1               	movwf	Lcd_Set_Cursor@z
  2083     021B                     l1366:
  2084                           
  2085                           ;./lcd.h: 48:   y = temp & 0x0F;
  2086     021B  0823               	movf	Lcd_Set_Cursor@temp,w
  2087     021C  390F               	andlw	15
  2088     021D  00A2               	movwf	Lcd_Set_Cursor@y
  2089     021E                     l1368:
  2090                           
  2091                           ;./lcd.h: 49:   Lcd_Cmd(z);
  2092     021E  0821               	movf	Lcd_Set_Cursor@z,w
  2093     021F  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2094     0224                     l1370:
  2095                           
  2096                           ;./lcd.h: 50:   Lcd_Cmd(y);
  2097     0224  1283               	bcf	3,5	;RP0=0, select bank0
  2098     0225  1303               	bcf	3,6	;RP1=0, select bank0
  2099     0226  0822               	movf	Lcd_Set_Cursor@y,w
  2100     0227  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2101                           
  2102                           ;./lcd.h: 51:  }
  2103     022C  2A51               	goto	l49
  2104     022D                     l1372:
  2105     022D  3002               	movlw	2
  2106     022E  0620               	xorwf	Lcd_Set_Cursor@a,w
  2107     022F  1D03               	btfss	3,2
  2108     0230  2A32               	goto	u1001
  2109     0231  2A33               	goto	u1000
  2110     0232                     u1001:
  2111     0232  2A51               	goto	l49
  2112     0233                     u1000:
  2113     0233                     l1374:
  2114                           
  2115                           ;./lcd.h: 53:  {;./lcd.h: 54:   temp = 0xC0 + b - 1;
  2116     0233  0876               	movf	Lcd_Set_Cursor@b,w
  2117     0234  3EBF               	addlw	191
  2118     0235  00A3               	movwf	Lcd_Set_Cursor@temp
  2119                           
  2120                           ;./lcd.h: 55:   z = temp>>4;
  2121     0236  0823               	movf	Lcd_Set_Cursor@temp,w
  2122     0237  00F7               	movwf	??_Lcd_Set_Cursor
  2123     0238  3004               	movlw	4
  2124     0239                     u1015:
  2125     0239  1003               	clrc
  2126     023A  0CF7               	rrf	??_Lcd_Set_Cursor,f
  2127     023B  3EFF               	addlw	-1
  2128     023C  1D03               	skipz
  2129     023D  2A39               	goto	u1015
  2130     023E  0877               	movf	??_Lcd_Set_Cursor,w
  2131     023F  00A1               	movwf	Lcd_Set_Cursor@z
  2132     0240                     l1376:
  2133                           
  2134                           ;./lcd.h: 56:   y = temp & 0x0F;
  2135     0240  0823               	movf	Lcd_Set_Cursor@temp,w
  2136     0241  390F               	andlw	15
  2137     0242  00A2               	movwf	Lcd_Set_Cursor@y
  2138     0243                     l1378:
  2139                           
  2140                           ;./lcd.h: 57:   Lcd_Cmd(z);
  2141     0243  0821               	movf	Lcd_Set_Cursor@z,w
  2142     0244  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2143     0249                     l1380:
  2144                           
  2145                           ;./lcd.h: 58:   Lcd_Cmd(y);
  2146     0249  1283               	bcf	3,5	;RP0=0, select bank0
  2147     024A  1303               	bcf	3,6	;RP1=0, select bank0
  2148     024B  0822               	movf	Lcd_Set_Cursor@y,w
  2149     024C  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2150     0251                     l49:
  2151     0251  0008               	return
  2152     0252                     __end_of_Lcd_Set_Cursor:
  2153                           
  2154                           	psect	text11
  2155     046A                     __ptext11:	
  2156 ;; *************** function _Lcd_Clear *****************
  2157 ;; Defined at:
  2158 ;;		line 35 in file "./lcd.h"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0, pclath, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2172 ;;      Params:         0       0       0       0       0
  2173 ;;      Locals:         0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0
  2175 ;;      Totals:         0       0       0       0       0
  2176 ;;Total ram usage:        0 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 3
  2179 ;; This function calls:
  2180 ;;		_Lcd_Cmd
  2181 ;; This function is called by:
  2182 ;;		_escreveLCD
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186     046A                     _Lcd_Clear:	
  2187                           ;psect for function _Lcd_Clear
  2188                           
  2189     046A                     l1360:	
  2190                           ;incstack = 0
  2191                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2192                           
  2193                           
  2194                           ;./lcd.h: 37:  Lcd_Cmd(0);
  2195     046A  3000               	movlw	0
  2196     046B  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2197                           
  2198                           ;./lcd.h: 38:  Lcd_Cmd(1);
  2199     0470  3001               	movlw	1
  2200     0471  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2201     0476                     l43:
  2202     0476  0008               	return
  2203     0477                     __end_of_Lcd_Clear:
  2204                           
  2205                           	psect	text12
  2206     045C                     __ptext12:	
  2207 ;; *************** function _configPWMRegs *****************
  2208 ;; Defined at:
  2209 ;;		line 61 in file "newmain.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;		None
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0
  2226 ;;      Totals:         0       0       0       0       0
  2227 ;;Total ram usage:        0 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 1
  2230 ;; This function calls:
  2231 ;;		Nothing
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237     045C                     _configPWMRegs:	
  2238                           ;psect for function _configPWMRegs
  2239                           
  2240     045C                     l1268:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _configPWMRegs: [wreg]
  2243                           
  2244                           
  2245                           ;newmain.c: 62:     CCP1CON = 0x0F;
  2246     045C  300F               	movlw	15
  2247     045D  1283               	bcf	3,5	;RP0=0, select bank0
  2248     045E  1303               	bcf	3,6	;RP1=0, select bank0
  2249     045F  0097               	movwf	23	;volatile
  2250                           
  2251                           ;newmain.c: 63:     PR2 = 100;
  2252     0460  3064               	movlw	100
  2253     0461  1683               	bsf	3,5	;RP0=1, select bank1
  2254     0462  1303               	bcf	3,6	;RP1=0, select bank1
  2255     0463  0092               	movwf	18	;volatile
  2256                           
  2257                           ;newmain.c: 64:     CCPR1L = porcentagem_PWM;
  2258     0464  1283               	bcf	3,5	;RP0=0, select bank0
  2259     0465  1303               	bcf	3,6	;RP1=0, select bank0
  2260     0466  0847               	movf	_porcentagem_PWM,w
  2261     0467  0095               	movwf	21	;volatile
  2262     0468                     l1270:
  2263                           
  2264                           ;newmain.c: 65:     TMR2ON = 1;
  2265     0468  1512               	bsf	18,2	;volatile
  2266     0469                     l92:
  2267     0469  0008               	return
  2268     046A                     __end_of_configPWMRegs:
  2269                           
  2270                           	psect	text13
  2271     0477                     __ptext13:	
  2272 ;; *************** function _configIntExterns *****************
  2273 ;; Defined at:
  2274 ;;		line 154 in file "newmain.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		None
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302     0477                     _configIntExterns:	
  2303                           ;psect for function _configIntExterns
  2304                           
  2305     0477                     l1280:	
  2306                           ;incstack = 0
  2307                           ; Regs used in _configIntExterns: []
  2308                           
  2309                           
  2310                           ;newmain.c: 156:     OPTION_REGbits.INTEDG = 0;
  2311     0477  1683               	bsf	3,5	;RP0=1, select bank1
  2312     0478  1303               	bcf	3,6	;RP1=0, select bank1
  2313     0479  1301               	bcf	1,6	;volatile
  2314                           
  2315                           ;newmain.c: 157:     INTCONbits.GIE = 1;
  2316     047A  178B               	bsf	11,7	;volatile
  2317                           
  2318                           ;newmain.c: 158:     INTCONbits.INTE = 1;
  2319     047B  160B               	bsf	11,4	;volatile
  2320                           
  2321                           ;newmain.c: 159:     INTCONbits.INTF = 0;
  2322     047C  108B               	bcf	11,1	;volatile
  2323     047D                     l128:	
  2324                           ;newmain.c: 160:     return;
  2325                           
  2326     047D  0008               	return
  2327     047E                     __end_of_configIntExterns:
  2328                           
  2329                           	psect	text14
  2330     0150                     __ptext14:	
  2331 ;; *************** function _Lcd_Init *****************
  2332 ;; Defined at:
  2333 ;;		line 62 in file "./lcd.h"
  2334 ;; Parameters:    Size  Location     Type
  2335 ;;		None
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;		None
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0, pclath, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       0       0       0       0
  2348 ;;      Locals:         0       0       0       0       0
  2349 ;;      Temps:          2       0       0       0       0
  2350 ;;      Totals:         2       0       0       0       0
  2351 ;;Total ram usage:        2 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 3
  2354 ;; This function calls:
  2355 ;;		_Lcd_Cmd
  2356 ;;		_Lcd_Port
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362     0150                     _Lcd_Init:	
  2363                           ;psect for function _Lcd_Init
  2364                           
  2365     0150                     l1398:	
  2366                           ;incstack = 0
  2367                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2368                           
  2369                           
  2370                           ;./lcd.h: 64:   Lcd_Port(0x00);
  2371     0150  3000               	movlw	0
  2372     0151  120A  118A  23E5  120A  118A  	fcall	_Lcd_Port
  2373     0156                     l1400:
  2374                           
  2375                           ;./lcd.h: 65:    _delay((unsigned long)((20)*(4000000/4000.0)));
  2376     0156  301A               	movlw	26
  2377     0157  00F7               	movwf	??_Lcd_Init+1
  2378     0158  30F8               	movlw	248
  2379     0159  00F6               	movwf	??_Lcd_Init
  2380     015A                     u1137:
  2381     015A  0BF6               	decfsz	??_Lcd_Init,f
  2382     015B  295A               	goto	u1137
  2383     015C  0BF7               	decfsz	??_Lcd_Init+1,f
  2384     015D  295A               	goto	u1137
  2385     015E  0000               	nop
  2386     015F                     l1402:
  2387                           
  2388                           ;./lcd.h: 66:   Lcd_Cmd(0x03);
  2389     015F  3003               	movlw	3
  2390     0160  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2391                           
  2392                           ;./lcd.h: 67:  _delay((unsigned long)((5)*(4000000/4000.0)));
  2393     0165  3007               	movlw	7
  2394     0166  00F7               	movwf	??_Lcd_Init+1
  2395     0167  307D               	movlw	125
  2396     0168  00F6               	movwf	??_Lcd_Init
  2397     0169                     u1147:
  2398     0169  0BF6               	decfsz	??_Lcd_Init,f
  2399     016A  2969               	goto	u1147
  2400     016B  0BF7               	decfsz	??_Lcd_Init+1,f
  2401     016C  2969               	goto	u1147
  2402     016D                     l1404:
  2403                           
  2404                           ;./lcd.h: 68:   Lcd_Cmd(0x03);
  2405     016D  3003               	movlw	3
  2406     016E  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2407     0173                     l1406:
  2408                           
  2409                           ;./lcd.h: 69:  _delay((unsigned long)((11)*(4000000/4000.0)));
  2410     0173  300F               	movlw	15
  2411     0174  00F7               	movwf	??_Lcd_Init+1
  2412     0175  3047               	movlw	71
  2413     0176  00F6               	movwf	??_Lcd_Init
  2414     0177                     u1157:
  2415     0177  0BF6               	decfsz	??_Lcd_Init,f
  2416     0178  2977               	goto	u1157
  2417     0179  0BF7               	decfsz	??_Lcd_Init+1,f
  2418     017A  2977               	goto	u1157
  2419     017B  297C               	nop2
  2420                           
  2421                           ;./lcd.h: 70:   Lcd_Cmd(0x03);
  2422     017C  3003               	movlw	3
  2423     017D  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2424                           
  2425                           ;./lcd.h: 72:   Lcd_Cmd(0x02);
  2426     0182  3002               	movlw	2
  2427     0183  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2428                           
  2429                           ;./lcd.h: 73:   Lcd_Cmd(0x02);
  2430     0188  3002               	movlw	2
  2431     0189  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2432                           
  2433                           ;./lcd.h: 74:   Lcd_Cmd(0x08);
  2434     018E  3008               	movlw	8
  2435     018F  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2436                           
  2437                           ;./lcd.h: 75:   Lcd_Cmd(0x00);
  2438     0194  3000               	movlw	0
  2439     0195  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2440                           
  2441                           ;./lcd.h: 76:   Lcd_Cmd(0x0C);
  2442     019A  300C               	movlw	12
  2443     019B  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2444                           
  2445                           ;./lcd.h: 77:   Lcd_Cmd(0x00);
  2446     01A0  3000               	movlw	0
  2447     01A1  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2448                           
  2449                           ;./lcd.h: 78:   Lcd_Cmd(0x06);
  2450     01A6  3006               	movlw	6
  2451     01A7  120A  118A  2442  120A  118A  	fcall	_Lcd_Cmd
  2452     01AC                     l52:
  2453     01AC  0008               	return
  2454     01AD                     __end_of_Lcd_Init:
  2455                           
  2456                           	psect	text15
  2457     0442                     __ptext15:	
  2458 ;; *************** function _Lcd_Cmd *****************
  2459 ;; Defined at:
  2460 ;;		line 26 in file "./lcd.h"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  a               1    wreg     unsigned char 
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  a               1    5[COMMON] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, pclath, cstack
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         1       0       0       0       0
  2476 ;;      Temps:          2       0       0       0       0
  2477 ;;      Totals:         3       0       0       0       0
  2478 ;;Total ram usage:        3 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 2
  2481 ;; This function calls:
  2482 ;;		_Lcd_Port
  2483 ;; This function is called by:
  2484 ;;		_Lcd_Clear
  2485 ;;		_Lcd_Set_Cursor
  2486 ;;		_Lcd_Init
  2487 ;;		_Lcd_Shift_Right
  2488 ;;		_Lcd_Shift_Left
  2489 ;; This function uses a non-reentrant model
  2490 ;;
  2491                           
  2492     0442                     _Lcd_Cmd:	
  2493                           ;psect for function _Lcd_Cmd
  2494                           
  2495                           
  2496                           ;incstack = 0
  2497                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2498                           ;Lcd_Cmd@a stored from wreg
  2499     0442  00F5               	movwf	Lcd_Cmd@a
  2500     0443                     l1330:
  2501                           
  2502                           ;./lcd.h: 26: void Lcd_Cmd(char a);./lcd.h: 27: {;./lcd.h: 28:  PORTDbits.RD2 = 0;
  2503     0443  1283               	bcf	3,5	;RP0=0, select bank0
  2504     0444  1303               	bcf	3,6	;RP1=0, select bank0
  2505     0445  1108               	bcf	8,2	;volatile
  2506     0446                     l1332:
  2507                           
  2508                           ;./lcd.h: 29:  Lcd_Port(a);
  2509     0446  0875               	movf	Lcd_Cmd@a,w
  2510     0447  120A  118A  23E5  120A  118A  	fcall	_Lcd_Port
  2511     044C                     l1334:
  2512                           
  2513                           ;./lcd.h: 30:  PORTDbits.RD3 = 1;
  2514     044C  1283               	bcf	3,5	;RP0=0, select bank0
  2515     044D  1303               	bcf	3,6	;RP1=0, select bank0
  2516     044E  1588               	bsf	8,3	;volatile
  2517     044F                     l1336:
  2518                           
  2519                           ;./lcd.h: 31:         _delay((unsigned long)((4)*(4000000/4000.0)));
  2520     044F  3006               	movlw	6
  2521     0450  00F4               	movwf	??_Lcd_Cmd+1
  2522     0451  3030               	movlw	48
  2523     0452  00F3               	movwf	??_Lcd_Cmd
  2524     0453                     u1167:
  2525     0453  0BF3               	decfsz	??_Lcd_Cmd,f
  2526     0454  2C53               	goto	u1167
  2527     0455  0BF4               	decfsz	??_Lcd_Cmd+1,f
  2528     0456  2C53               	goto	u1167
  2529     0457  0000               	nop
  2530     0458                     l1338:
  2531                           
  2532                           ;./lcd.h: 32:         PORTDbits.RD3 = 0;
  2533     0458  1283               	bcf	3,5	;RP0=0, select bank0
  2534     0459  1303               	bcf	3,6	;RP1=0, select bank0
  2535     045A  1188               	bcf	8,3	;volatile
  2536     045B                     l40:
  2537     045B  0008               	return
  2538     045C                     __end_of_Lcd_Cmd:
  2539                           
  2540                           	psect	text16
  2541     03E5                     __ptext16:	
  2542 ;; *************** function _Lcd_Port *****************
  2543 ;; Defined at:
  2544 ;;		line 4 in file "./lcd.h"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  a               1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  a               1    2[COMMON] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         0       0       0       0       0
  2559 ;;      Locals:         1       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0
  2561 ;;      Totals:         1       0       0       0       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 1
  2565 ;; This function calls:
  2566 ;;		Nothing
  2567 ;; This function is called by:
  2568 ;;		_Lcd_Cmd
  2569 ;;		_Lcd_Init
  2570 ;;		_Lcd_Write_Char
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574     03E5                     _Lcd_Port:	
  2575                           ;psect for function _Lcd_Port
  2576                           
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in _Lcd_Port: [wreg]
  2580                           ;Lcd_Port@a stored from wreg
  2581     03E5  00F2               	movwf	Lcd_Port@a
  2582     03E6                     l1320:
  2583                           
  2584                           ;./lcd.h: 4: void Lcd_Port(char a);./lcd.h: 5: {;./lcd.h: 6:  if(a & 1)
  2585     03E6  1C72               	btfss	Lcd_Port@a,0
  2586     03E7  2BE9               	goto	u931
  2587     03E8  2BEA               	goto	u930
  2588     03E9                     u931:
  2589     03E9  2BEE               	goto	l29
  2590     03EA                     u930:
  2591     03EA                     l1322:
  2592                           
  2593                           ;./lcd.h: 7:   PORTDbits.RD4 = 1;
  2594     03EA  1283               	bcf	3,5	;RP0=0, select bank0
  2595     03EB  1303               	bcf	3,6	;RP1=0, select bank0
  2596     03EC  1608               	bsf	8,4	;volatile
  2597     03ED  2BF1               	goto	l30
  2598     03EE                     l29:	
  2599                           ;./lcd.h: 8:  else
  2600                           
  2601                           
  2602                           ;./lcd.h: 9:   PORTDbits.RD4 = 0;
  2603     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2604     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2605     03F0  1208               	bcf	8,4	;volatile
  2606     03F1                     l30:
  2607                           
  2608                           ;./lcd.h: 11:  if(a & 2)
  2609     03F1  1CF2               	btfss	Lcd_Port@a,1
  2610     03F2  2BF4               	goto	u941
  2611     03F3  2BF5               	goto	u940
  2612     03F4                     u941:
  2613     03F4  2BF7               	goto	l31
  2614     03F5                     u940:
  2615     03F5                     l1324:
  2616                           
  2617                           ;./lcd.h: 12:   PORTDbits.RD5 = 1;
  2618     03F5  1688               	bsf	8,5	;volatile
  2619     03F6  2BF8               	goto	l32
  2620     03F7                     l31:	
  2621                           ;./lcd.h: 13:  else
  2622                           
  2623                           
  2624                           ;./lcd.h: 14:   PORTDbits.RD5 = 0;
  2625     03F7  1288               	bcf	8,5	;volatile
  2626     03F8                     l32:
  2627                           
  2628                           ;./lcd.h: 16:  if(a & 4)
  2629     03F8  1D72               	btfss	Lcd_Port@a,2
  2630     03F9  2BFB               	goto	u951
  2631     03FA  2BFC               	goto	u950
  2632     03FB                     u951:
  2633     03FB  2BFE               	goto	l33
  2634     03FC                     u950:
  2635     03FC                     l1326:
  2636                           
  2637                           ;./lcd.h: 17:   PORTDbits.RD6 = 1;
  2638     03FC  1708               	bsf	8,6	;volatile
  2639     03FD  2BFF               	goto	l34
  2640     03FE                     l33:	
  2641                           ;./lcd.h: 18:  else
  2642                           
  2643                           
  2644                           ;./lcd.h: 19:   PORTDbits.RD6 = 0;
  2645     03FE  1308               	bcf	8,6	;volatile
  2646     03FF                     l34:
  2647                           
  2648                           ;./lcd.h: 21:  if(a & 8)
  2649     03FF  1DF2               	btfss	Lcd_Port@a,3
  2650     0400  2C02               	goto	u961
  2651     0401  2C03               	goto	u960
  2652     0402                     u961:
  2653     0402  2C05               	goto	l35
  2654     0403                     u960:
  2655     0403                     l1328:
  2656                           
  2657                           ;./lcd.h: 22:   PORTDbits.RD7 = 1;
  2658     0403  1788               	bsf	8,7	;volatile
  2659     0404  2C06               	goto	l37
  2660     0405                     l35:	
  2661                           ;./lcd.h: 23:  else
  2662                           
  2663                           
  2664                           ;./lcd.h: 24:   PORTDbits.RD7 = 0;
  2665     0405  1388               	bcf	8,7	;volatile
  2666     0406                     l37:
  2667     0406  0008               	return
  2668     0407                     __end_of_Lcd_Port:
  2669                           
  2670                           	psect	text17
  2671     0427                     __ptext17:	
  2672 ;; *************** function _interrupcao *****************
  2673 ;; Defined at:
  2674 ;;		line 109 in file "newmain.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2688 ;;      Params:         0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0
  2690 ;;      Temps:          2       0       0       0       0
  2691 ;;      Totals:         2       0       0       0       0
  2692 ;;Total ram usage:        2 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; This function calls:
  2695 ;;		Nothing
  2696 ;; This function is called by:
  2697 ;;		Interrupt level 1
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701     0427                     _interrupcao:	
  2702                           ;psect for function _interrupcao
  2703                           
  2704     0427                     i1l1286:
  2705                           
  2706                           ;newmain.c: 111:     if(INTF){
  2707     0427  1C8B               	btfss	11,1	;volatile
  2708     0428  2C2A               	goto	u91_21
  2709     0429  2C2B               	goto	u91_20
  2710     042A                     u91_21:
  2711     042A  2C3B               	goto	i1l116
  2712     042B                     u91_20:
  2713     042B                     i1l1288:
  2714                           
  2715                           ;newmain.c: 112:         if(menu_ativo){
  2716     042B  1283               	bcf	3,5	;RP0=0, select bank0
  2717     042C  1303               	bcf	3,6	;RP1=0, select bank0
  2718     042D  0843               	movf	_menu_ativo,w
  2719     042E  0444               	iorwf	_menu_ativo+1,w
  2720     042F  1903               	btfsc	3,2
  2721     0430  2C32               	goto	u92_21
  2722     0431  2C33               	goto	u92_20
  2723     0432                     u92_21:
  2724     0432  2C36               	goto	i1l1292
  2725     0433                     u92_20:
  2726     0433                     i1l1290:
  2727                           
  2728                           ;newmain.c: 113:             menu_ativo = 0;
  2729     0433  01C3               	clrf	_menu_ativo
  2730     0434  01C4               	clrf	_menu_ativo+1
  2731                           
  2732                           ;newmain.c: 114:         }
  2733     0435  2C3A               	goto	i1l1294
  2734     0436                     i1l1292:
  2735                           
  2736                           ;newmain.c: 116:         menu_ativo = 1;
  2737     0436  3001               	movlw	1
  2738     0437  00C3               	movwf	_menu_ativo
  2739     0438  3000               	movlw	0
  2740     0439  00C4               	movwf	_menu_ativo+1
  2741     043A                     i1l1294:
  2742                           
  2743                           ;newmain.c: 119:         INTCONbits.INTF = 0;
  2744     043A  108B               	bcf	11,1	;volatile
  2745     043B                     i1l116:
  2746     043B  0871               	movf	??_interrupcao+1,w
  2747     043C  008A               	movwf	10
  2748     043D  0E70               	swapf	??_interrupcao,w
  2749     043E  0083               	movwf	3
  2750     043F  0EFE               	swapf	btemp,f
  2751     0440  0E7E               	swapf	btemp,w
  2752     0441  0009               	retfie
  2753     0442                     __end_of_interrupcao:
  2754     007E                     btemp	set	126	;btemp
  2755     007E                     wtemp0	set	126
  2756                           
  2757                           	psect	intentry
  2758     0004                     __pintentry:	
  2759                           ;incstack = 0
  2760                           ; Regs used in _interrupcao: [wreg+status,2+status,0]
  2761                           
  2762     0004                     interrupt_function:
  2763     007E                     saved_w	set	btemp
  2764     0004  00FE               	movwf	btemp
  2765     0005  0E03               	swapf	3,w
  2766     0006  00F0               	movwf	??_interrupcao
  2767     0007  080A               	movf	10,w
  2768     0008  00F1               	movwf	??_interrupcao+1
  2769     0009  120A  118A  2C27   	ljmp	_interrupcao

Data Sizes:
    Strings     37
    Constant    0
    Data        2
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     35      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    main@texto_menu	PTR unsigned char  size(1) Largest target is 13
		 -> STR_3(CODE[13]), 

    escreveLCD@linha2	PTR unsigned char  size(2) Largest target is 16
		 -> main@texto_porcentagem(BANK0[16]), STR_2(CODE[8]), 

    escreveLCD@linha1	PTR unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[13]), STR_1(CODE[16]), 

    intToASCIIinCustomBase@resultado	PTR unsigned char  size(1) Largest target is 16
		 -> main@texto_porcentagem(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> main@texto_porcentagem(BANK0[16]), STR_3(CODE[13]), STR_2(CODE[8]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_escreveLCD
    _intToASCIIinCustomBase->___awdiv
    _handleSetupMenu->_escreveLCD
    _escreveLCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _interrupcao in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_intToASCIIinCustomBase
    _handleSetupMenu->_escreveLCD
    _escreveLCD->_Lcd_Write_String

Critical Paths under _interrupcao in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupcao in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupcao in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupcao in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0    6112
                                             18 BANK0     17    17      0
                           _Lcd_Init
                   _configIntExterns
                      _configPWMRegs
                         _escreveLCD
                    _handleSetupMenu
             _intToASCIIinCustomBase
 ---------------------------------------------------------------------------------
 (1) _intToASCIIinCustomBase                              18    13      5    2136
                                              0 BANK0     18    13      5
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _handleSetupMenu                                      0     0      0    1758
                         _escreveLCD
                    _verificaBtnMais
                   _verificaBtnMenos
 ---------------------------------------------------------------------------------
 (2) _verificaBtnMenos                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _verificaBtnMais                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _escreveLCD                                           5     3      2    1758
                                              9 COMMON     1     1      0
                                              5 BANK0      4     2      2
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     7     5      2     564
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       4     4      0     254
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       6     5      1     725
                                              6 COMMON     2     1      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _configPWMRegs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configIntExterns                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     279
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              3     3      0     155
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0     124
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupcao                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _configIntExterns
   _configPWMRegs
   _escreveLCD
     _Lcd_Clear
       _Lcd_Cmd
     _Lcd_Set_Cursor
       _Lcd_Cmd
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _handleSetupMenu
     _escreveLCD
     _verificaBtnMais
     _verificaBtnMenos
   _intToASCIIinCustomBase
     ___awdiv
     ___awmod

 _interrupcao (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Jun 25 13:15:04 2023

                              pc 0002                               l30 03F1                               l31 03F7  
                             l32 03F8                               l40 045B                               l33 03FE  
                             l34 03FF                               l35 0405                               l43 0476  
                             l52 01AC                               l37 0406                               l29 03EE  
                             l61 02DD                               l55 03B2                               l49 0251  
                             l92 0469                               l95 0342                               l79 00E8  
                   ___awdiv@sign 0077                               fsr 0004                              l100 034A  
                            l103 03DE                              l108 03E4                              l125 0426  
                            l119 0314                              l128 047D                              l375 014F  
                            l388 0205                              _PR2 0092                              u600 0321  
                            u601 0320                              u610 0332                              u611 0331  
                            u620 0348                              u621 0347                              u630 03BB  
                            u710 011C                              u615 032E                              u631 03BA  
                            u711 011B                              u640 03BF                              u641 03BE  
                            u705 010E                              u650 03D0                              u730 012D  
                            u810 01DA                              u651 03CF                              u731 012C  
                            u811 01D9                              u660 03E2                              u820 01E4  
                            u661 03E1                              u725 011D                              u821 01E3  
                            u805 01CC                              u590 031B                              u750 0141  
                            u670 00EE                              u591 031A                              u655 03CC  
                            u751 0140                              u735 0129                              u671 00ED  
                            u760 0146                              u680 00F9                              u840 01F7  
                            u761 0145                              u745 0135                              u681 00F8  
                            u841 01F6                              u825 01E0                              u930 03EA  
                            u690 010A                              u850 01FC                              u770 01B2  
                            u931 03E9                              u691 0109                              u851 01FB  
                            u835 01EB                              u771 01B1                              u940 03F5  
                            u780 01BD                              u941 03F4                              u781 01BC  
                            u950 03FC                              u790 01C8                              u951 03FB  
                            u791 01C7                              u960 0403                              u961 0402  
                            u980 020E                              u981 020D                              u975 038D  
                            u995 0214                              fsr0 0004                              indf 0000  
                   ___awmod@sign 0077                             l1100 0325                             l1102 0332  
                           l1110 03BB                             l1104 033B                             l1120 03E2  
                           l1112 03BF                             l1200 01EA                             l1106 0348  
                           l1114 03C3                             l1130 00E9                             l1202 01F1  
                           l1116 03D0                             l1108 03B3                             l1140 00F9  
                           l1132 00EA                             l1204 01F7                             l1118 03D9  
                           l1150 010D                             l1142 00FE                             l1134 00EE  
                           l1206 01FC                             l1320 03E6                             l1400 0156  
                           l1160 0133                             l1152 0114                             l1144 0102  
                           l1136 00F3                             l1208 0201                             l1322 03EA  
                           l1330 0443                             l1402 015F                             l1170 014B  
                           l1162 0134                             l1154 0118                             l1146 0104  
                           l1138 00F5                             l1410 0029                             l1324 03F5  
                           l1332 0446                             l1404 016D                             l1340 0381  
                           l1164 013B                             l1156 011C                             l1148 010A  
                           l1180 01B7                             l1420 0041                             l1412 002F  
                           l1326 03FC                             l1334 044C                             l1406 0173  
                           l1270 0468                             l1350 039F                             l1342 0387  
                           l1094 0315                             l1158 012D                             l1166 0141  
                           l1190 01CB                             l1182 01B9                             l1174 01AD  
                           l1430 007E                             l1422 0054                             l1414 0034  
                           l1328 0403                             l1336 044F                             l1280 0477  
                           l1360 046A                             l1352 03A2                             l1344 038A  
                           l1096 031B                             l1168 0146                             l1192 01D2  
                           l1184 01BD                             l1176 01AE                             l1440 00A6  
                           l1432 0084                             l1424 0061                             l1416 003A  
                           l1408 0025                             l1338 0458                             l1370 0224  
                           l1362 0209                             l1354 03A8                             l1346 0398  
                           l1098 0321                             l1194 01D6                             l1186 01C2  
                           l1178 01B2                             l1450 00D4                             l1442 00AF  
                           l1426 006C                             l1434 0097                             l1268 045C  
                           l1380 0249                             l1364 020E                             l1372 022D  
                           l1356 03AB                             l1348 039B                             l1460 041E  
                           l1196 01DA                             l1188 01C8                             l1444 00B9  
                           l1452 00DA                             l1436 009D                             l1428 0076  
                           l1374 0233                             l1366 021B                             l1358 03AF  
                           l1382 0298                             l1390 02DF                             l1454 0407  
                           l1198 01E4                             l1446 00C7                             l1438 00A4  
                           l1470 0256                             l1376 0240                             l1368 021E  
                           l1384 029D                             l1392 02EC                             l1456 0408  
                           l1448 00CE                             l1480 026E                             l1472 0258  
                           l1378 0243                             l1386 02B9                             l1394 02F7  
                           l1458 0412                             l1482 0273                             l1474 025D  
                           l1466 0252                             l1388 02C1                             l1396 030A  
                           l1484 0277                             l1476 0260                             l1468 0255  
                           l1398 0150                             l1486 0286                             l1478 0269  
                           l1488 028A                             STR_1 035B                             STR_2 0378  
                           STR_3 036B                             u1000 0233                             u1001 0232  
                           u1020 02A7                             u1030 02CB                             u1015 0239  
                           u1040 02DD                             u1041 02DC                             u1050 002F  
                           u1107 0310                             u1051 002E                             u1060 0061  
                           u1117 039D                             u1061 0060                             u1070 009D  
                           u1127 03AD                             u1071 009C                             u1080 00E8  
                           u1137 015A                             u1081 00E7                             u1065 005D  
                           u1090 0426                             u1147 0169                             u1091 0425  
                           u1157 0177                             u1085 00E4                             u1167 0453  
                           _INTF 0059                 ?_verificaBtnMais 0070                ?_Lcd_Write_String 0077  
                           _main 0252                             btemp 007E                             start 000C  
             ??_Lcd_Write_String 0020                  __end_of_Lcd_Cmd 045C          intToASCIIinCustomBase@i 002C  
        intToASCIIinCustomBase@j 002E                  ??_configPWMRegs 0072                  _handleSetupMenu 0407  
                          ?_main 0070                  __end_of___awdiv 0150                  __end_of___awmod 0206  
                ___awdiv@divisor 0072                            i1l116 043B                  ___awdiv@counter 0076  
              ?_verificaBtnMenos 0070                            _TRISB 0086                            _TRISC 0087  
                          _TRISD 0088                            u91_20 042B                            u91_21 042A  
                          u92_20 0433                            u92_21 0432               ??_verificaBtnMenos 0072  
                          pclath 000A                            status 0003                            wtemp0 007E  
               __end_of_Lcd_Init 01AD                 __end_of_Lcd_Port 0407          ?_intToASCIIinCustomBase 0020  
                __initialization 000F                     ?_interrupcao 0070                     __end_of_main 0298  
                         ??_main 007A                           _CCPR1L 0015                 ___awdiv@dividend 0074  
                         i1l1290 0433                           i1l1292 0436                           i1l1294 043A  
                         i1l1286 0427                           i1l1288 042B                        ??_Lcd_Cmd 0073  
                         _TMR2ON 0092   __end_of_intToASCIIinCustomBase 00E9          __end_of_handleSetupMenu 0427  
                      ??___awdiv 0076                        ??___awmod 0076                 ___awdiv@quotient 0078  
                ___awmod@divisor 0072                  ___awmod@counter 0076                           saved_w 007E  
               _configIntExterns 0477                  Lcd_Set_Cursor@a 0020                  Lcd_Set_Cursor@b 0076  
                Lcd_Set_Cursor@y 0022                  Lcd_Set_Cursor@z 0021          __end_of__initialization 0021  
              __end_of_Lcd_Clear 0477                   __pcstackCOMMON 0070                     __pidataBANK0 047E  
                 _Lcd_Set_Cursor 0206                   _OPTION_REGbits 0081                        ?_Lcd_Init 0070  
                      ?_Lcd_Port 0070                       __pbssBANK0 0043       intToASCIIinCustomBase@base 0023  
     intToASCIIinCustomBase@temp 0027                       __pmaintext 0252                 ?_handleSetupMenu 0070  
                     __pintentry 0004                          _CCP1CON 0017           __end_of_Lcd_Set_Cursor 0252  
                     ??_Lcd_Init 0076                       ??_Lcd_Port 0072                       __stringtab 034B  
                 _Lcd_Write_Char 0380                          _Lcd_Cmd 0442                       _escreveLCD 02DE  
                        ___awdiv 00E9                          ___awmod 01AD                  ?_Lcd_Set_Cursor 0076  
          __end_of_configPWMRegs 046A                          __ptext1 0025                          __ptext2 01AD  
                        __ptext3 00E9                          __ptext4 0407                          __ptext5 03B3  
                        __ptext6 0315                          __ptext7 02DE                          __ptext8 0298  
                        __ptext9 0380                       _menu_ativo 0043                 ___awmod@dividend 0074  
         __end_of_Lcd_Write_Char 03B3             end_of_initialization 0021                  _porcentagem_PWM 0047  
       __end_of_configIntExterns 047E                   main@texto_menu 0042                        Lcd_Port@a 0072  
                      _PORTBbits 0006                        _PORTDbits 0008                     _btn_mais_aux 007A  
                ?_Lcd_Write_Char 0070                Lcd_Write_String@a 0077                Lcd_Write_String@i 0023  
                    ?_escreveLCD 0025                        _Lcd_Clear 046A                 _Lcd_Write_String 0298  
              ??_verificaBtnMais 0072              start_initialization 000F                 _verificaBtnMenos 03B3  
                     ?_Lcd_Clear 0070            main@texto_porcentagem 0032                      __pdataBANK0 0047  
                Lcd_Write_Char@a 0076                  Lcd_Write_Char@y 0075                      __pbssCOMMON 007A  
                      ___latbits 0002                    __pcstackBANK0 0020         ??_intToASCIIinCustomBase 0025  
    intToASCIIinCustomBase@resto 002A                         ?_Lcd_Cmd 0070                    ??_interrupcao 0070  
               ??_Lcd_Set_Cursor 0077                         ?___awdiv 0072                         ?___awmod 0072  
                      __pstrings 034B  intToASCIIinCustomBase@resultado 0022                interrupt_function 0004  
                       Lcd_Cmd@a 0075                      ??_Lcd_Clear 0076                ?_configIntExterns 0070  
             ??_configIntExterns 0072              __end_of_interrupcao 0442                      __stringbase 035A  
               escreveLCD@linha1 0079                 escreveLCD@linha2 0025                 ??_Lcd_Write_Char 0073  
                       _Lcd_Init 0150                         _Lcd_Port 03E5         __end_of_Lcd_Write_String 02DE  
     _intToASCIIinCustomBase$178 0028                     ??_escreveLCD 0027                  _verificaBtnMais 0315  
             __end_of__stringtab 035B         __end_of_verificaBtnMenos 03E5               __end_of_escreveLCD 0315  
                       __ptext10 0206                         __ptext11 046A                         __ptext12 045C  
                       __ptext13 0477                         __ptext14 0150                         __ptext15 0442  
                       __ptext16 03E5                         __ptext17 0427                ??_handleSetupMenu 007A  
                    _interrupcao 0427           _intToASCIIinCustomBase 0025     intToASCIIinCustomBase@indice 0030  
   intToASCIIinCustomBase@numero 0020                    _configPWMRegs 045C                       _INTCONbits 000B  
             Lcd_Write_Char@temp 0074          __end_of_verificaBtnMais 034B                         intlevel1 0000  
                      stringcode 0355               Lcd_Set_Cursor@temp 0023                   ?_configPWMRegs 0070  
                       stringdir 0355                         stringtab 034B                    _btn_menos_aux 0045  
